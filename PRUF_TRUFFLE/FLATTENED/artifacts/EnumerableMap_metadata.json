{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are supported.",
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Documents/DEV/PRUF/PRUF_TRUFFLE/FLATTENED/Flattened_STAKE_TKN.sol": "EnumerableMap"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Documents/DEV/PRUF/PRUF_TRUFFLE/FLATTENED/Flattened_STAKE_TKN.sol": {
			"keccak256": "0x3d1316e79a86b26efc7032397ff740a2685602ed6948c36019e54f4a7343bc93",
			"license": "UNLICENSED AND MIT",
			"urls": [
				"bzz-raw://03c862ecdb320f8960fcea798c292beff3e4edfda807f73a4f043ed766afb6dd",
				"dweb:/ipfs/QmPJ9muNGk6bp1UTCGVh31cyfFu8FvmM5Bq3moi1wxiGPu"
			]
		}
	},
	"version": 1
}