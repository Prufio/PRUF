{
  "contractName": "ERC3156FlashBorrowerMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "enableReturn",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "enableApprove",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "BalanceOf",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TotalSupply",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enableReturn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableApprove\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BalanceOf\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TotalSupply\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY. Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care. This is not an example of how it should be done, and no pattern present in this mock should be considered secure. Following best practices, always have your contract properly audited before using them to manipulate important funds on live networks.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Imports/mocks/ERC3156FlashBorrowerMock.sol\":\"ERC3156FlashBorrowerMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Imports/interfaces/IERC3156.sol\":{\"keccak256\":\"0x0756e64bac82c6a7fb4641c9e885157a846cc4cf4e4bbabdb44dae990bb859aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4684148f2153fc719a5ce46c231dcf6dfde14962309339528a1d187932026a69\",\"dweb:/ipfs/QmbT7Bz3juMxjFwXWoe82HLnXJzdzfA6NAPkF1P6L8ifuV\"]},\"project:/contracts/Imports/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0xd8f024daac89eda49447a5eda37ace71b4bed6f30e25e4c620d444a2150f8275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb473b44044f465857f1f3b4c946c67a8ad675f7fb21c28960a4ce806b191168\",\"dweb:/ipfs/QmW4qx4zADDETNd7CbogPo6KJySXBJhnNeQjp9NqEKS9u6\"]},\"project:/contracts/Imports/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x3ffcf6f6dc8c143445b0c7824af6fba7795c3fed9f4a573bd84b0b6a56feaf02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccc0b27dce81e227b049b597460fc15e0bce61656983393a16c4b9bb6479f8f3\",\"dweb:/ipfs/QmSQdu9XwFBnvCYbQSTdy5mYKJiBNxycdsiCUgprY24ssb\"]},\"project:/contracts/Imports/mocks/ERC3156FlashBorrowerMock.sol\":{\"keccak256\":\"0x79d4ceef8968713737e7be79fba4d6c1812923d59b16f56101811f9453f543a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8046ffd1eb955da068a65ddfb34e5e6c0978a693588d2fabe0fdc17be6073582\",\"dweb:/ipfs/QmRicyzV2fXEkExNAXMJf5xeykKNveCNRGZh4kB3LUzwcx\"]},\"project:/contracts/Imports/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"project:/contracts/Imports/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161079038038061079083398101604081905261002f9161005b565b151560f890811b608052901515901b60a05261008e565b8051801515811461005657600080fd5b919050565b6000806040838503121561006e57600080fd5b61007783610046565b915061008560208401610046565b90509250929050565b60805160f81c60a05160f81c6106d76100b960003960006102f20152600061023201526106d76000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e36600461051b565b610055565b60405190815260200160405180910390f35b6000336001600160a01b0387161461006c57600080fd5b6040516370a0823160e01b815230600482018190527f6ff2acfcb07917b1e80e53f0fe390b467b1151d15b38730a6e08397799c05a8b918891906001600160a01b038316906370a082319060240160206040518083038186803b1580156100d257600080fd5b505afa1580156100e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010a91906105e3565b604080516001600160a01b0394851681529390921660208401529082015260600160405180910390a17f7249fd4c03cce09b30a13d77804b198e2647c0ccd59eadf4de4e7c16099badc586876001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561018e57600080fd5b505afa1580156101a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c691906105e3565b604080516001600160a01b03909316835260208301919091520160405180910390a181156102305761022e8684848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061034992505050565b505b7f0000000000000000000000000000000000000000000000000000000000000000156102f0576001600160a01b03861663095ea7b387610270878961064b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156102b657600080fd5b505af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee91906105c1565b505b7f000000000000000000000000000000000000000000000000000000000000000061031c57600061033e565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd95b979650505050505050565b606061038b83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610392565b9392505050565b60606103a184846000856103a9565b949350505050565b60608247101561040f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b843b61045d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610406565b600080866001600160a01b0316858760405161047991906105fc565b60006040518083038185875af1925050503d80600081146104b6576040519150601f19603f3d011682016040523d82523d6000602084013e6104bb565b606091505b509150915061033e828286606083156104d557508161038b565b8251156104e55782518084602001fd5b8160405162461bcd60e51b81526004016104069190610618565b80356001600160a01b038116811461051657600080fd5b919050565b60008060008060008060a0878903121561053457600080fd5b61053d876104ff565b955061054b602088016104ff565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561057657600080fd5b818901915089601f83011261058a57600080fd5b81358181111561059957600080fd5b8a60208285010111156105ab57600080fd5b6020830194508093505050509295509295509295565b6000602082840312156105d357600080fd5b8151801515811461038b57600080fd5b6000602082840312156105f557600080fd5b5051919050565b6000825161060e818460208701610671565b9190910192915050565b6020815260008251806020840152610637816040850160208701610671565b601f01601f19169190910160400192915050565b6000821982111561066c57634e487b7160e01b600052601160045260246000fd5b500190565b60005b8381101561068c578181015183820152602001610674565b8381111561069b576000848401525b5050505056fea26469706673582212208929d31a9c413a278a6a97849792c7dd26278577bcf72bada4d4239ea35dd10364736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e36600461051b565b610055565b60405190815260200160405180910390f35b6000336001600160a01b0387161461006c57600080fd5b6040516370a0823160e01b815230600482018190527f6ff2acfcb07917b1e80e53f0fe390b467b1151d15b38730a6e08397799c05a8b918891906001600160a01b038316906370a082319060240160206040518083038186803b1580156100d257600080fd5b505afa1580156100e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010a91906105e3565b604080516001600160a01b0394851681529390921660208401529082015260600160405180910390a17f7249fd4c03cce09b30a13d77804b198e2647c0ccd59eadf4de4e7c16099badc586876001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561018e57600080fd5b505afa1580156101a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c691906105e3565b604080516001600160a01b03909316835260208301919091520160405180910390a181156102305761022e8684848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061034992505050565b505b7f0000000000000000000000000000000000000000000000000000000000000000156102f0576001600160a01b03861663095ea7b387610270878961064b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156102b657600080fd5b505af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee91906105c1565b505b7f000000000000000000000000000000000000000000000000000000000000000061031c57600061033e565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd95b979650505050505050565b606061038b83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610392565b9392505050565b60606103a184846000856103a9565b949350505050565b60608247101561040f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b843b61045d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610406565b600080866001600160a01b0316858760405161047991906105fc565b60006040518083038185875af1925050503d80600081146104b6576040519150601f19603f3d011682016040523d82523d6000602084013e6104bb565b606091505b509150915061033e828286606083156104d557508161038b565b8251156104e55782518084602001fd5b8160405162461bcd60e51b81526004016104069190610618565b80356001600160a01b038116811461051657600080fd5b919050565b60008060008060008060a0878903121561053457600080fd5b61053d876104ff565b955061054b602088016104ff565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561057657600080fd5b818901915089601f83011261058a57600080fd5b81358181111561059957600080fd5b8a60208285010111156105ab57600080fd5b6020830194508093505050509295509295509295565b6000602082840312156105d357600080fd5b8151801515811461038b57600080fd5b6000602082840312156105f557600080fd5b5051919050565b6000825161060e818460208701610671565b9190910192915050565b6020815260008251806020840152610637816040850160208701610671565b601f01601f19169190910160400192915050565b6000821982111561066c57634e487b7160e01b600052601160045260246000fd5b500190565b60005b8381101561068c578181015183820152602001610674565b8381111561069b576000848401525b5050505056fea26469706673582212208929d31a9c413a278a6a97849792c7dd26278577bcf72bada4d4239ea35dd10364736f6c63430008070033",
  "immutableReferences": {
    "8032": [
      {
        "length": 32,
        "start": 562
      }
    ],
    "8034": [
      {
        "length": 32,
        "start": 754
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:466:339",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:339",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "71:107:339",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "81:22:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "96:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "90:5:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "90:13:339"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "81:5:339"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "156:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "165:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "168:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "158:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "158:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "158:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "125:5:339"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "146:5:339"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "139:6:339"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "139:13:339"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "132:6:339"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "132:21:339"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "122:2:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "122:32:339"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "115:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "115:40:339"
                  },
                  "nodeType": "YulIf",
                  "src": "112:60:339"
                }
              ]
            },
            "name": "abi_decode_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "50:6:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:339",
                "type": ""
              }
            ],
            "src": "14:164:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "275:189:339",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "321:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "330:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "333:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "323:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "323:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "296:7:339"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "305:9:339"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "292:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "292:23:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:2:339",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "288:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:32:339"
                  },
                  "nodeType": "YulIf",
                  "src": "285:52:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "346:47:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "383:9:339"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bool_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "356:26:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:37:339"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "346:6:339"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "402:56:339",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "443:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "454:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "439:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "439:18:339"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bool_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "412:26:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "412:46:339"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "402:6:339"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_boolt_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "233:9:339",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "244:7:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "256:6:339",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "264:6:339",
                "type": ""
              }
            ],
            "src": "183:281:339"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_boolt_bool_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n        value1 := abi_decode_bool_fromMemory(add(headStart, 32))\n    }\n}",
      "id": 339,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4516:339",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:339",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:339",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:339"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:339"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:339"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:339"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:339",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:339",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:339"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:339"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:339",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:339"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:339"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:339"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:339"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:339"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:339"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:339"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:339",
                "type": ""
              }
            ],
            "src": "14:173:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "349:720:339",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "396:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "405:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "408:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "398:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "398:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "398:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "370:7:339"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "379:9:339"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "366:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "366:23:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "391:3:339",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "362:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:33:339"
                  },
                  "nodeType": "YulIf",
                  "src": "359:53:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "421:39:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "450:9:339"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "431:18:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:29:339"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "421:6:339"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "469:48:339",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "502:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "513:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "498:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "498:18:339"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "479:18:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:38:339"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "469:6:339"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "526:42:339",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "553:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "564:2:339",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:18:339"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "536:12:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "536:32:339"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "526:6:339"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "577:42:339",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "604:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "615:2:339",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "600:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:18:339"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "587:12:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "587:32:339"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "577:6:339"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "628:47:339",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "659:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "670:3:339",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "655:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "655:19:339"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "642:12:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:33:339"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "632:6:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "684:28:339",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "694:18:339",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "688:2:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "739:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "748:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "751:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "741:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "741:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "741:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "727:6:339"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "735:2:339"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "724:2:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:14:339"
                  },
                  "nodeType": "YulIf",
                  "src": "721:34:339"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "764:32:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "778:9:339"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "789:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "774:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "774:22:339"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "768:2:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "844:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "853:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "856:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "846:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "846:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "846:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "823:2:339"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "827:4:339",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "819:3:339"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "819:13:339"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "834:7:339"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "815:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "815:27:339"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "808:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:35:339"
                  },
                  "nodeType": "YulIf",
                  "src": "805:55:339"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "869:30:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "896:2:339"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "883:12:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:16:339"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "873:6:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "926:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "935:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "938:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "928:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "928:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "928:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "914:6:339"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "922:2:339"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "911:2:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:14:339"
                  },
                  "nodeType": "YulIf",
                  "src": "908:34:339"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "992:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1001:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1004:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "994:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "994:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "994:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "965:2:339"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "969:6:339"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "961:3:339"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "961:15:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "978:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "957:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "957:24:339"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "983:7:339"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "954:2:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:37:339"
                  },
                  "nodeType": "YulIf",
                  "src": "951:57:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1017:21:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1031:2:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1035:2:339",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:11:339"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1017:6:339"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1047:16:339",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1057:6:339"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1047:6:339"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "275:9:339",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "286:7:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "298:6:339",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "306:6:339",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "314:6:339",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "322:6:339",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "330:6:339",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "338:6:339",
                "type": ""
              }
            ],
            "src": "192:877:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1152:199:339",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1198:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1207:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1210:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1200:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1200:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1200:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1173:7:339"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1182:9:339"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1169:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1169:23:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1194:2:339",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1165:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1165:32:339"
                  },
                  "nodeType": "YulIf",
                  "src": "1162:52:339"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1223:29:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1242:9:339"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1236:5:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1236:16:339"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1227:5:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1305:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1314:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1317:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1307:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1307:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1307:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1274:5:339"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1295:5:339"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1288:6:339"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1288:13:339"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1281:6:339"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1281:21:339"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1271:2:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:32:339"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1264:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:40:339"
                  },
                  "nodeType": "YulIf",
                  "src": "1261:60:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1330:15:339",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1340:5:339"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1330:6:339"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1118:9:339",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1129:7:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1141:6:339",
                "type": ""
              }
            ],
            "src": "1074:277:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1437:103:339",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1483:16:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1492:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1495:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1485:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1485:12:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1485:12:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1458:7:339"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1467:9:339"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1454:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:23:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1479:2:339",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1450:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:32:339"
                  },
                  "nodeType": "YulIf",
                  "src": "1447:52:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1508:26:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1524:9:339"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1518:5:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:16:339"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1508:6:339"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1403:9:339",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1414:7:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1426:6:339",
                "type": ""
              }
            ],
            "src": "1356:184:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1682:137:339",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1692:27:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1712:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1706:5:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1706:13:339"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1696:6:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1754:6:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1762:4:339",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1750:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1750:17:339"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1769:3:339"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1774:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1728:21:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1728:53:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1728:53:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1790:23:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1801:3:339"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1806:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1797:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1797:16:339"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1790:3:339"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1658:3:339",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1663:6:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1674:3:339",
                "type": ""
              }
            ],
            "src": "1545:274:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1925:102:339",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1935:26:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1947:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1958:2:339",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1943:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1943:18:339"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1935:4:339"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1977:9:339"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1992:6:339"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2008:3:339",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2013:1:339",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2004:3:339"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2004:11:339"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2017:1:339",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2000:3:339"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2000:19:339"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1988:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1988:32:339"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1970:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:51:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1970:51:339"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1894:9:339",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1905:6:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1916:4:339",
                "type": ""
              }
            ],
            "src": "1824:203:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2189:218:339",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2199:26:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2211:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2222:2:339",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2207:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2207:18:339"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2199:4:339"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2234:29:339",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2252:3:339",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2257:1:339",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2248:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2248:11:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2261:1:339",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2244:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2244:19:339"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2238:2:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2279:9:339"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2294:6:339"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2302:2:339"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2290:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2290:15:339"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2272:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2272:34:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2272:34:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2326:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2337:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2322:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2322:18:339"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2346:6:339"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2354:2:339"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2342:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2342:15:339"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2315:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:43:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2315:43:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2378:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2389:2:339",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2374:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2374:18:339"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2394:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2367:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:34:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2367:34:339"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2142:9:339",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2153:6:339",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2161:6:339",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2169:6:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2180:4:339",
                "type": ""
              }
            ],
            "src": "2032:375:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2541:145:339",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2551:26:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2563:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2574:2:339",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2559:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2559:18:339"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2551:4:339"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2593:9:339"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2608:6:339"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2624:3:339",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2629:1:339",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2620:3:339"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2620:11:339"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2633:1:339",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2616:3:339"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2616:19:339"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2604:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2604:32:339"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2586:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2586:51:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2586:51:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2657:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2668:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2653:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2653:18:339"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2673:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2646:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:34:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2646:34:339"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2502:9:339",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2513:6:339",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2521:6:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2532:4:339",
                "type": ""
              }
            ],
            "src": "2412:274:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2792:76:339",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2802:26:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2814:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2825:2:339",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2810:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2810:18:339"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2802:4:339"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2844:9:339"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2855:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2837:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2837:25:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2837:25:339"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2761:9:339",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2772:6:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2783:4:339",
                "type": ""
              }
            ],
            "src": "2691:177:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2994:262:339",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3011:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3022:2:339",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3004:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3004:21:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3004:21:339"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3034:27:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3054:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3048:5:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3048:13:339"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3038:6:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3081:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3092:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3077:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3077:18:339"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3097:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3070:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3070:34:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3070:34:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3139:6:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3147:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3135:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3135:15:339"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3156:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3167:2:339",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3152:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3152:18:339"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3172:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3113:21:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3113:66:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3113:66:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3188:62:339",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3204:9:339"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3223:6:339"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3231:2:339",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3219:3:339"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3219:15:339"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3240:2:339",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3236:3:339"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3236:7:339"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3215:3:339"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3215:29:339"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3200:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3200:45:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3247:2:339",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3196:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:54:339"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3188:4:339"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2963:9:339",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2974:6:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2985:4:339",
                "type": ""
              }
            ],
            "src": "2873:383:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3435:228:339",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3452:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3463:2:339",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3445:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3445:21:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3445:21:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3486:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3497:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3482:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3482:18:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3502:2:339",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3475:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3475:30:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3475:30:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3525:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3536:2:339",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3521:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3521:18:339"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3541:34:339",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3514:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3514:62:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3514:62:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3596:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3607:2:339",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3592:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3592:18:339"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3612:8:339",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3585:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3585:36:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3585:36:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3630:27:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3642:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3653:3:339",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3638:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3638:19:339"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3630:4:339"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3412:9:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3426:4:339",
                "type": ""
              }
            ],
            "src": "3261:402:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3842:179:339",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3859:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3870:2:339",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3852:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3852:21:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3852:21:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3893:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3904:2:339",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3889:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3889:18:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3909:2:339",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3882:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3882:30:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3882:30:339"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3932:9:339"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3943:2:339",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3928:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3928:18:339"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3948:31:339",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3921:6:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3921:59:339"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3921:59:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3989:26:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4001:9:339"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4012:2:339",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3997:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3997:18:339"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3989:4:339"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3819:9:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3833:4:339",
                "type": ""
              }
            ],
            "src": "3668:353:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4074:177:339",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4109:111:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4130:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4137:3:339",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4142:10:339",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4133:3:339"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4133:20:339"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4123:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4123:31:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4123:31:339"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4174:1:339",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4177:4:339",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4167:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4167:15:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4167:15:339"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4202:1:339",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4205:4:339",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4195:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4195:15:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4195:15:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4090:1:339"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4097:1:339"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4093:3:339"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4093:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4087:2:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4087:13:339"
                  },
                  "nodeType": "YulIf",
                  "src": "4084:136:339"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4229:16:339",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4240:1:339"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4243:1:339"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4236:3:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4236:9:339"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4229:3:339"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4057:1:339",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4060:1:339",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4066:3:339",
                "type": ""
              }
            ],
            "src": "4026:225:339"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4309:205:339",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4319:10:339",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4328:1:339",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4323:1:339",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4388:63:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4413:3:339"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4418:1:339"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4409:3:339"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4409:11:339"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "4432:3:339"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4437:1:339"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4428:3:339"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4428:11:339"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4422:5:339"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4422:18:339"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4402:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4402:39:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4402:39:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4349:1:339"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4352:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4346:2:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4346:13:339"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4360:19:339",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4362:15:339",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4371:1:339"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4374:2:339",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4367:3:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4367:10:339"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4362:1:339"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4342:3:339",
                    "statements": []
                  },
                  "src": "4338:113:339"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4477:31:339",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4490:3:339"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4495:6:339"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4486:3:339"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4486:16:339"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4504:1:339",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4479:6:339"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4479:27:339"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4479:27:339"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4466:1:339"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4469:6:339"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4463:2:339"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4463:13:339"
                  },
                  "nodeType": "YulIf",
                  "src": "4460:48:339"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4287:3:339",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4292:3:339",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4297:6:339",
                "type": ""
              }
            ],
            "src": "4256:258:339"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value4 := add(_2, 32)\n        value5 := length\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n}",
      "id": 339,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "625:1200:88:-:0;;;976:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:30;;;;;;;;1077:28;;;;;;;625:1200;;14:164:339;90:13;;139;;132:21;122:32;;112:60;;168:1;165;158:12;112:60;14:164;;;:::o;183:281::-;256:6;264;317:2;305:9;296:7;292:23;288:32;285:52;;;333:1;330;323:12;285:52;356:37;383:9;356:37;:::i;:::-;346:47;;412:46;454:2;443:9;439:18;412:46;:::i;:::-;402:56;;183:281;;;;;:::o;:::-;625:1200:88;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "625:1200:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:705;;;;;;:::i;:::-;;:::i;:::-;;;2837:25:339;;;2825:2;2810:18;1118:705:88;;;;;;;;1298:7;1325:10;-1:-1:-1;;;;;1325:19:88;;;1317:28;;;;;;1393:38;;-1:-1:-1;;;1393:38:88;;1386:4;1393:38;;;1970:51:339;;;1361:71:88;;1371:5;;1386:4;-1:-1:-1;;;;;1393:23:88;;;;;1943:18:339;;1393:38:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1361:71;;;-1:-1:-1;;;;;2290:15:339;;;2272:34;;2342:15;;;;2337:2;2322:18;;2315:43;2374:18;;;2367:34;2222:2;2207:18;1361:71:88;;;;;;;1447:47;1459:5;1473;-1:-1:-1;;;;;1466:25:88;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1447:47;;;-1:-1:-1;;;;;2604:32:339;;;2586:51;;2668:2;2653:18;;2646:34;;;;2559:18;1447:47:88;;;;;;;1509:15;;1505:155;;1616:33;1637:5;1644:4;;1616:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1616:20:88;;-1:-1:-1;;;1616:33:88:i;:::-;;1505:155;1674:14;1670:87;;;-1:-1:-1;;;;;1704:21:88;;;1711:5;1733:12;1742:3;1733:6;:12;:::i;:::-;1704:42;;-1:-1:-1;;;;;;1704:42:88;;;;;;;-1:-1:-1;;;;;2604:32:339;;;1704:42:88;;;2586:51:339;2653:18;;;2646:34;2559:18;;1704:42:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1670:87;1774:13;:42;;1814:1;1774:42;;;732:45;1774:42;1767:49;1118:705;-1:-1:-1;;;;;;;1118:705:88:o;3066:173:187:-;3141:12;3172:60;3185:6;3193:4;3172:60;;;;;;;;;;;;;;;;;:12;:60::i;:::-;3165:67;3066:173;-1:-1:-1;;;3066:173:187:o;3461:223::-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:187:o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:187;;3463:2:339;4737:81:187;;;3445:21:339;3502:2;3482:18;;;3475:30;3541:34;3521:18;;;3514:62;-1:-1:-1;;;3592:18:339;;;3585:36;3638:19;;4737:81:187;;;;;;;;;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:187;;3870:2:339;4828:60:187;;;3852:21:339;3909:2;3889:18;;;3882:30;3948:31;3928:18;;;3921:59;3997:18;;4828:60:187;3668:353:339;4828:60:187;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:187;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;7307;7335:7;7331:516;;;-1:-1:-1;7365:10:187;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:187;;;;;;;;:::i;14:173:339:-;82:20;;-1:-1:-1;;;;;131:31:339;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:877::-;298:6;306;314;322;330;338;391:3;379:9;370:7;366:23;362:33;359:53;;;408:1;405;398:12;359:53;431:29;450:9;431:29;:::i;:::-;421:39;;479:38;513:2;502:9;498:18;479:38;:::i;:::-;469:48;;564:2;553:9;549:18;536:32;526:42;;615:2;604:9;600:18;587:32;577:42;;670:3;659:9;655:19;642:33;694:18;735:2;727:6;724:14;721:34;;;751:1;748;741:12;721:34;789:6;778:9;774:22;764:32;;834:7;827:4;823:2;819:13;815:27;805:55;;856:1;853;846:12;805:55;896:2;883:16;922:2;914:6;911:14;908:34;;;938:1;935;928:12;908:34;983:7;978:2;969:6;965:2;961:15;957:24;954:37;951:57;;;1004:1;1001;994:12;951:57;1035:2;1031;1027:11;1017:21;;1057:6;1047:16;;;;;192:877;;;;;;;;:::o;1074:277::-;1141:6;1194:2;1182:9;1173:7;1169:23;1165:32;1162:52;;;1210:1;1207;1200:12;1162:52;1242:9;1236:16;1295:5;1288:13;1281:21;1274:5;1271:32;1261:60;;1317:1;1314;1307:12;1356:184;1426:6;1479:2;1467:9;1458:7;1454:23;1450:32;1447:52;;;1495:1;1492;1485:12;1447:52;-1:-1:-1;1518:16:339;;1356:184;-1:-1:-1;1356:184:339:o;1545:274::-;1674:3;1712:6;1706:13;1728:53;1774:6;1769:3;1762:4;1754:6;1750:17;1728:53;:::i;:::-;1797:16;;;;;1545:274;-1:-1:-1;;1545:274:339:o;2873:383::-;3022:2;3011:9;3004:21;2985:4;3054:6;3048:13;3097:6;3092:2;3081:9;3077:18;3070:34;3113:66;3172:6;3167:2;3156:9;3152:18;3147:2;3139:6;3135:15;3113:66;:::i;:::-;3240:2;3219:15;-1:-1:-1;;3215:29:339;3200:45;;;;3247:2;3196:54;;2873:383;-1:-1:-1;;2873:383:339:o;4026:225::-;4066:3;4097:1;4093:6;4090:1;4087:13;4084:136;;;4142:10;4137:3;4133:20;4130:1;4123:31;4177:4;4174:1;4167:15;4205:4;4202:1;4195:15;4084:136;-1:-1:-1;4236:9:339;;4026:225::o;4256:258::-;4328:1;4338:113;4352:6;4349:1;4346:13;4338:113;;;4428:11;;;4422:18;4409:11;;;4402:39;4374:2;4367:10;4338:113;;;4469:6;4466:1;4463:13;4460:48;;;4504:1;4495:6;4490:3;4486:16;4479:27;4460:48;;4256:258;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/IERC20.sol\";\nimport \"../interfaces/IERC3156.sol\";\nimport \"../utils/Address.sol\";\n\n/**\n * @dev WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY.\n * Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care.\n * This is not an example of how it should be done, and no pattern present in this mock should be considered secure.\n * Following best practices, always have your contract properly audited before using them to manipulate important funds on\n * live networks.\n */\ncontract ERC3156FlashBorrowerMock is IERC3156FlashBorrower {\n    bytes32 internal constant _RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    bool immutable _enableApprove;\n    bool immutable _enableReturn;\n\n    event BalanceOf(address token, address account, uint256 value);\n    event TotalSupply(address token, uint256 value);\n\n    constructor(bool enableReturn, bool enableApprove) {\n        _enableApprove = enableApprove;\n        _enableReturn = enableReturn;\n    }\n\n    function onFlashLoan(\n        address, /*initiator*/\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) public override returns (bytes32) {\n        require(msg.sender == token);\n\n        emit BalanceOf(token, address(this), IERC20(token).balanceOf(address(this)));\n        emit TotalSupply(token, IERC20(token).totalSupply());\n\n        if (data.length > 0) {\n            // WARNING: This code is for testing purposes only! Do not use.\n            Address.functionCall(token, data);\n        }\n\n        if (_enableApprove) {\n            IERC20(token).approve(token, amount + fee);\n        }\n\n        return _enableReturn ? _RETURN_VALUE : bytes32(0);\n    }\n}\n",
  "sourcePath": "/Users/drake/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/mocks/ERC3156FlashBorrowerMock.sol",
  "ast": {
    "absolutePath": "project:/contracts/Imports/mocks/ERC3156FlashBorrowerMock.sol",
    "exportedSymbols": {
      "Address": [
        22838
      ],
      "ERC3156FlashBorrowerMock": [
        8149
      ],
      "IERC20": [
        17211
      ],
      "IERC3156FlashBorrower": [
        5366
      ],
      "IERC3156FlashLender": [
        5404
      ]
    },
    "id": 8150,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8019,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:88"
      },
      {
        "absolutePath": "project:/contracts/Imports/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 8020,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8150,
        "sourceUnit": 17212,
        "src": "58:35:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Imports/interfaces/IERC3156.sol",
        "file": "../interfaces/IERC3156.sol",
        "id": 8021,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8150,
        "sourceUnit": 5347,
        "src": "94:36:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Imports/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 8022,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8150,
        "sourceUnit": 22839,
        "src": "131:30:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8024,
              "name": "IERC3156FlashBorrower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5366,
              "src": "662:21:88"
            },
            "id": 8025,
            "nodeType": "InheritanceSpecifier",
            "src": "662:21:88"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8023,
          "nodeType": "StructuredDocumentation",
          "src": "163:461:88",
          "text": " @dev WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY.\n Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care.\n This is not an example of how it should be done, and no pattern present in this mock should be considered secure.\n Following best practices, always have your contract properly audited before using them to manipulate important funds on\n live networks."
        },
        "fullyImplemented": true,
        "id": 8149,
        "linearizedBaseContracts": [
          8149,
          5366
        ],
        "name": "ERC3156FlashBorrowerMock",
        "nameLocation": "634:24:88",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8030,
            "mutability": "constant",
            "name": "_RETURN_VALUE",
            "nameLocation": "716:13:88",
            "nodeType": "VariableDeclaration",
            "scope": 8149,
            "src": "690:87:88",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8026,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:88",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
                  "id": 8028,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "742:34:88",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
                    "typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
                  },
                  "value": "ERC3156FlashBorrower.onFlashLoan"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
                    "typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
                  }
                ],
                "id": 8027,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "732:9:88",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 8029,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "732:45:88",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8032,
            "mutability": "immutable",
            "name": "_enableApprove",
            "nameLocation": "799:14:88",
            "nodeType": "VariableDeclaration",
            "scope": 8149,
            "src": "784:29:88",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8031,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "784:4:88",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8034,
            "mutability": "immutable",
            "name": "_enableReturn",
            "nameLocation": "834:13:88",
            "nodeType": "VariableDeclaration",
            "scope": 8149,
            "src": "819:28:88",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8033,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "819:4:88",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 8042,
            "name": "BalanceOf",
            "nameLocation": "860:9:88",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "878:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "870:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "893:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "885:15:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8040,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "910:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "902:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "869:47:88"
            },
            "src": "854:63:88"
          },
          {
            "anonymous": false,
            "id": 8048,
            "name": "TotalSupply",
            "nameLocation": "928:11:88",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "948:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "940:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8046,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "963:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "955:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:30:88"
            },
            "src": "922:48:88"
          },
          {
            "body": {
              "id": 8063,
              "nodeType": "Block",
              "src": "1027:85:88",
              "statements": [
                {
                  "expression": {
                    "id": 8057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8055,
                      "name": "_enableApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8032,
                      "src": "1037:14:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8056,
                      "name": "enableApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8052,
                      "src": "1054:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1037:30:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8058,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:30:88"
                },
                {
                  "expression": {
                    "id": 8061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8059,
                      "name": "_enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8034,
                      "src": "1077:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8060,
                      "name": "enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8050,
                      "src": "1093:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1077:28:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8062,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:28:88"
                }
              ]
            },
            "id": 8064,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8050,
                  "mutability": "mutable",
                  "name": "enableReturn",
                  "nameLocation": "993:12:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8064,
                  "src": "988:17:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8052,
                  "mutability": "mutable",
                  "name": "enableApprove",
                  "nameLocation": "1012:13:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8064,
                  "src": "1007:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8051,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:39:88"
            },
            "returnParameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1027:0:88"
            },
            "scope": 8149,
            "src": "976:136:88",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5365
            ],
            "body": {
              "id": 8147,
              "nodeType": "Block",
              "src": "1307:516:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8081,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1325:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1325:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8083,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8068,
                          "src": "1339:5:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1325:19:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1317:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:28:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8086,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:28:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8088,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8068,
                        "src": "1371:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8091,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1386:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8149",
                              "typeString": "contract ERC3156FlashBorrowerMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8149",
                              "typeString": "contract ERC3156FlashBorrowerMock"
                            }
                          ],
                          "id": 8090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1378:7:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1378:7:88",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:13:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 8099,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1425:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8149",
                                  "typeString": "contract ERC3156FlashBorrowerMock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8149",
                                  "typeString": "contract ERC3156FlashBorrowerMock"
                                }
                              ],
                              "id": 8098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1417:7:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8097,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1417:7:88",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1417:13:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8094,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8068,
                                "src": "1400:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8093,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17211,
                              "src": "1393:6:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$17211_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 8095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1393:13:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$17211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17150,
                          "src": "1393:23:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 8101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1393:38:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8087,
                      "name": "BalanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8042,
                      "src": "1361:9:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:71:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8103,
                  "nodeType": "EmitStatement",
                  "src": "1356:76:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8105,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8068,
                        "src": "1459:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8107,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8068,
                                "src": "1473:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8106,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17211,
                              "src": "1466:6:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$17211_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 8108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1466:13:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$17211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17142,
                          "src": "1466:25:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 8110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:27:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8104,
                      "name": "TotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8048,
                      "src": "1447:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:47:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8112,
                  "nodeType": "EmitStatement",
                  "src": "1442:52:88"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8113,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8074,
                        "src": "1509:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 8114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1509:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1523:1:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1509:15:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8125,
                  "nodeType": "IfStatement",
                  "src": "1505:155:88",
                  "trueBody": {
                    "id": 8124,
                    "nodeType": "Block",
                    "src": "1526:134:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8120,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8068,
                              "src": "1637:5:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8121,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8074,
                              "src": "1644:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 8117,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22838,
                              "src": "1616:7:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$22838_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 8119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22612,
                            "src": "1616:20:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 8122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1616:33:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 8123,
                        "nodeType": "ExpressionStatement",
                        "src": "1616:33:88"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 8126,
                    "name": "_enableApprove",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8032,
                    "src": "1674:14:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8138,
                  "nodeType": "IfStatement",
                  "src": "1670:87:88",
                  "trueBody": {
                    "id": 8137,
                    "nodeType": "Block",
                    "src": "1690:67:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8131,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8068,
                              "src": "1726:5:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8132,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8070,
                                "src": "1733:6:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 8133,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8072,
                                "src": "1742:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1733:12:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8128,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8068,
                                  "src": "1711:5:88",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8127,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17211,
                                "src": "1704:6:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$17211_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1704:13:88",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$17211",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17180,
                            "src": "1704:21:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 8135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1704:42:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8136,
                        "nodeType": "ExpressionStatement",
                        "src": "1704:42:88"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "id": 8139,
                      "name": "_enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8034,
                      "src": "1774:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1814:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1806:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 8141,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1806:7:88",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1806:10:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1774:42:88",
                    "trueExpression": {
                      "id": 8140,
                      "name": "_RETURN_VALUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8030,
                      "src": "1790:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 8079,
                  "id": 8146,
                  "nodeType": "Return",
                  "src": "1767:49:88"
                }
              ]
            },
            "functionSelector": "23e30c8b",
            "id": 8148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onFlashLoan",
            "nameLocation": "1127:11:88",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1280:8:88"
            },
            "parameters": {
              "id": 8075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8066,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1148:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8068,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1187:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1179:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8070,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1210:6:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1202:14:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8072,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1234:3:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1226:11:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8074,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1262:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1247:19:88",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8073,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:5:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1138:134:88"
            },
            "returnParameters": {
              "id": 8079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1298:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8077,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1297:9:88"
            },
            "scope": 8149,
            "src": "1118:705:88",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8150,
        "src": "625:1200:88",
        "usedErrors": []
      }
    ],
    "src": "33:1793:88"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Imports/mocks/ERC3156FlashBorrowerMock.sol",
    "exportedSymbols": {
      "Address": [
        22838
      ],
      "ERC3156FlashBorrowerMock": [
        8149
      ],
      "IERC20": [
        17211
      ],
      "IERC3156FlashBorrower": [
        5366
      ],
      "IERC3156FlashLender": [
        5404
      ]
    },
    "id": 8150,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8019,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:88"
      },
      {
        "absolutePath": "project:/contracts/Imports/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 8020,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8150,
        "sourceUnit": 17212,
        "src": "58:35:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Imports/interfaces/IERC3156.sol",
        "file": "../interfaces/IERC3156.sol",
        "id": 8021,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8150,
        "sourceUnit": 5347,
        "src": "94:36:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Imports/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 8022,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8150,
        "sourceUnit": 22839,
        "src": "131:30:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8024,
              "name": "IERC3156FlashBorrower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5366,
              "src": "662:21:88"
            },
            "id": 8025,
            "nodeType": "InheritanceSpecifier",
            "src": "662:21:88"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8023,
          "nodeType": "StructuredDocumentation",
          "src": "163:461:88",
          "text": " @dev WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY.\n Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care.\n This is not an example of how it should be done, and no pattern present in this mock should be considered secure.\n Following best practices, always have your contract properly audited before using them to manipulate important funds on\n live networks."
        },
        "fullyImplemented": true,
        "id": 8149,
        "linearizedBaseContracts": [
          8149,
          5366
        ],
        "name": "ERC3156FlashBorrowerMock",
        "nameLocation": "634:24:88",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8030,
            "mutability": "constant",
            "name": "_RETURN_VALUE",
            "nameLocation": "716:13:88",
            "nodeType": "VariableDeclaration",
            "scope": 8149,
            "src": "690:87:88",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8026,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:88",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
                  "id": 8028,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "742:34:88",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
                    "typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
                  },
                  "value": "ERC3156FlashBorrower.onFlashLoan"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
                    "typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
                  }
                ],
                "id": 8027,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "732:9:88",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 8029,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "732:45:88",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8032,
            "mutability": "immutable",
            "name": "_enableApprove",
            "nameLocation": "799:14:88",
            "nodeType": "VariableDeclaration",
            "scope": 8149,
            "src": "784:29:88",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8031,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "784:4:88",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8034,
            "mutability": "immutable",
            "name": "_enableReturn",
            "nameLocation": "834:13:88",
            "nodeType": "VariableDeclaration",
            "scope": 8149,
            "src": "819:28:88",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8033,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "819:4:88",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 8042,
            "name": "BalanceOf",
            "nameLocation": "860:9:88",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "878:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "870:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "893:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "885:15:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8040,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "910:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "902:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "869:47:88"
            },
            "src": "854:63:88"
          },
          {
            "anonymous": false,
            "id": 8048,
            "name": "TotalSupply",
            "nameLocation": "928:11:88",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "948:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "940:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8046,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "963:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "955:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:30:88"
            },
            "src": "922:48:88"
          },
          {
            "body": {
              "id": 8063,
              "nodeType": "Block",
              "src": "1027:85:88",
              "statements": [
                {
                  "expression": {
                    "id": 8057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8055,
                      "name": "_enableApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8032,
                      "src": "1037:14:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8056,
                      "name": "enableApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8052,
                      "src": "1054:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1037:30:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8058,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:30:88"
                },
                {
                  "expression": {
                    "id": 8061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8059,
                      "name": "_enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8034,
                      "src": "1077:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8060,
                      "name": "enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8050,
                      "src": "1093:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1077:28:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8062,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:28:88"
                }
              ]
            },
            "id": 8064,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8050,
                  "mutability": "mutable",
                  "name": "enableReturn",
                  "nameLocation": "993:12:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8064,
                  "src": "988:17:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8052,
                  "mutability": "mutable",
                  "name": "enableApprove",
                  "nameLocation": "1012:13:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8064,
                  "src": "1007:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8051,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:39:88"
            },
            "returnParameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1027:0:88"
            },
            "scope": 8149,
            "src": "976:136:88",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5365
            ],
            "body": {
              "id": 8147,
              "nodeType": "Block",
              "src": "1307:516:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8081,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1325:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1325:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8083,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8068,
                          "src": "1339:5:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1325:19:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1317:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:28:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8086,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:28:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8088,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8068,
                        "src": "1371:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8091,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1386:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8149",
                              "typeString": "contract ERC3156FlashBorrowerMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8149",
                              "typeString": "contract ERC3156FlashBorrowerMock"
                            }
                          ],
                          "id": 8090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1378:7:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1378:7:88",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:13:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 8099,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1425:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8149",
                                  "typeString": "contract ERC3156FlashBorrowerMock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8149",
                                  "typeString": "contract ERC3156FlashBorrowerMock"
                                }
                              ],
                              "id": 8098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1417:7:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8097,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1417:7:88",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1417:13:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8094,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8068,
                                "src": "1400:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8093,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17211,
                              "src": "1393:6:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$17211_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 8095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1393:13:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$17211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17150,
                          "src": "1393:23:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 8101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1393:38:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8087,
                      "name": "BalanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8042,
                      "src": "1361:9:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:71:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8103,
                  "nodeType": "EmitStatement",
                  "src": "1356:76:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8105,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8068,
                        "src": "1459:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8107,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8068,
                                "src": "1473:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8106,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17211,
                              "src": "1466:6:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$17211_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 8108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1466:13:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$17211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17142,
                          "src": "1466:25:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 8110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:27:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8104,
                      "name": "TotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8048,
                      "src": "1447:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:47:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8112,
                  "nodeType": "EmitStatement",
                  "src": "1442:52:88"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8113,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8074,
                        "src": "1509:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 8114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1509:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1523:1:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1509:15:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8125,
                  "nodeType": "IfStatement",
                  "src": "1505:155:88",
                  "trueBody": {
                    "id": 8124,
                    "nodeType": "Block",
                    "src": "1526:134:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8120,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8068,
                              "src": "1637:5:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8121,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8074,
                              "src": "1644:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 8117,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22838,
                              "src": "1616:7:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$22838_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 8119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22612,
                            "src": "1616:20:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 8122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1616:33:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 8123,
                        "nodeType": "ExpressionStatement",
                        "src": "1616:33:88"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 8126,
                    "name": "_enableApprove",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8032,
                    "src": "1674:14:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8138,
                  "nodeType": "IfStatement",
                  "src": "1670:87:88",
                  "trueBody": {
                    "id": 8137,
                    "nodeType": "Block",
                    "src": "1690:67:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8131,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8068,
                              "src": "1726:5:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8132,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8070,
                                "src": "1733:6:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 8133,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8072,
                                "src": "1742:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1733:12:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8128,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8068,
                                  "src": "1711:5:88",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8127,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17211,
                                "src": "1704:6:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$17211_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1704:13:88",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$17211",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17180,
                            "src": "1704:21:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 8135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1704:42:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8136,
                        "nodeType": "ExpressionStatement",
                        "src": "1704:42:88"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "id": 8139,
                      "name": "_enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8034,
                      "src": "1774:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1814:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1806:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 8141,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1806:7:88",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1806:10:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1774:42:88",
                    "trueExpression": {
                      "id": 8140,
                      "name": "_RETURN_VALUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8030,
                      "src": "1790:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 8079,
                  "id": 8146,
                  "nodeType": "Return",
                  "src": "1767:49:88"
                }
              ]
            },
            "functionSelector": "23e30c8b",
            "id": 8148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onFlashLoan",
            "nameLocation": "1127:11:88",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1280:8:88"
            },
            "parameters": {
              "id": 8075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8066,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1148:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8068,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1187:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1179:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8070,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1210:6:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1202:14:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8072,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1234:3:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1226:11:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8074,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1262:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1247:19:88",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8073,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:5:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1138:134:88"
            },
            "returnParameters": {
              "id": 8079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8148,
                  "src": "1298:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8077,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1297:9:88"
            },
            "scope": 8149,
            "src": "1118:705:88",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8150,
        "src": "625:1200:88",
        "usedErrors": []
      }
    ],
    "src": "33:1793:88"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-26T17:58:03.622Z",
  "devdoc": {
    "details": "WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY. Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care. This is not an example of how it should be done, and no pattern present in this mock should be considered secure. Following best practices, always have your contract properly audited before using them to manipulate important funds on live networks.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}