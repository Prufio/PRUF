{
  "contractName": "ERC721PresetMinterPauserAutoId",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/presets/ERC721PresetMinterPauserAutoId.sol\":\"ERC721PresetMinterPauserAutoId\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/GSN/Context.sol\":{\"keccak256\":\"0xd9e1cdbea4cf7c51ac26f5782db0fb3d78c1b37e090547e83aef497a727a18f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5017e004334d7579774232e18f739ee9eb39438d03c49a9451a35e315c28761b\",\"dweb:/ipfs/QmNb8Q8C6WLgtWqCE7iL5T1UN52Q6QsE7ZtVc6ppcvViXe\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/access/AccessControl.sol\":{\"keccak256\":\"0x9aebca86ab21a332bc34865475177073cd18a432ef8e0921b21bea864d39f85f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32c350e12cd1427eeda3ba0e23172cfd7b8ea772c2861c499ca4cad11b7c673\",\"dweb:/ipfs/QmVAEythW94EjHZLaVYn7wvY5j4K8kYsPJPyVEWALtrxVv\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/introspection/ERC165.sol\":{\"keccak256\":\"0x9ed426cf3e38eebff76bb62467b964397a651f5bc790fddbbbb317408b2cb59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4f33678891b579bc9147d5516d65157a9db54ef339ba60f4f0adb11c301f939\",\"dweb:/ipfs/QmYZpeGK4Cpiw8VbPthTqijVbrMFVw1BfRn7oUkP85oyN5\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/introspection/IERC165.sol\":{\"keccak256\":\"0xe422884a5ef330f9f92024cbabf06101ee132889600ce2da21ecccef6d00699f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f3ab2e8a2811cd0a053e5b4271a828e5c2044c0ff3b97d78512758b536beaf4\",\"dweb:/ipfs/QmeFi4p4m7D1uUys15uPCzWLN1K2EUA3becSBNazJTtc7v\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/math/SafeMath.sol\":{\"keccak256\":\"0x8d890f7a794b66b8b3ab54779603c254f85ee0d436dd4a17b3543c6629b726f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://887bb68104c8f862a66939b192a85e79564bed9bbe72cda6240fd89bbea642fd\",\"dweb:/ipfs/QmbC56SFqW7UCx26RfPFWPiEXnQTJXSBA5r4SrojRMHqeM\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/presets/ERC721PresetMinterPauserAutoId.sol\":{\"keccak256\":\"0xed208caa3bea776fb9f1991e983a01e2dc6cdf85efbe9a57c6178fce87e00716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07293b532f4c55c51ec897a76a24853cd28ec73be62b3e0eb05e8f88f44b6b7\",\"dweb:/ipfs/QmdYigDseY53zt7wY59Q49jxJWVdztHaWfjuaNse4JhXU8\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xc28a76a83c95bdb00be1cabfac124d7c96a30160dda25768a454be6cebefe8eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d343da3ed8d463ae51fff7aa4bb4576c1acf527eda4ceaf4b16eeb08c58052d\",\"dweb:/ipfs/QmaWNTTEWHix8S1n9z5EmSVjCAhQsYuHZijJABenkgw3AA\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0x2589d209575fc6f1c2a2e1a02d0f363349c62fd40da30bcbdc98ead981cde82d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ea5a43abab0448b5f49c177d6908a70e719f5a25633fe1bf5307a05cddd71cf\",\"dweb:/ipfs/QmNi545pyzSEHhcnSyZ4KdxAeZrdikmYJbDF3JGm4pMckg\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721Pausable.sol\":{\"keccak256\":\"0x7e98ec93350bf379c711fdc05a5d54d36e2932d662008cad1fc4c634f8e3824e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f02758b978b460641607bafd09094f95c8c0e8bfd6541085ce4a78e7b78be50\",\"dweb:/ipfs/QmQE19ieWTcFTq3XghBz83XTnYCvchivQGu5gBR6npSrT4\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x91db100dda33be3cb161cabdac0509454d172702299dbd1b6fa2e05ba642bdc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21fec202af687c65f79f8f234e82bbdac027b6239b2756269430ca6ec23409ff\",\"dweb:/ipfs/QmX7MCq7cXkiZEzT749rNsUPCZKgQxfsMH35GPoszMdLnK\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xfad2a742f3e804f64389362ac93b267da405839b8f5fc36a5f6f5c99b8e015ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d892f306fb83195377533e28c0b91060808e3198e43bff4253ef6a211bb311e\",\"dweb:/ipfs/QmPquy92WXd65D5NCDDbZMRcs3HDw1zSYuZb4z5PAdVKdB\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf3f62c312a3dcc958db5881e4e1b267b57ac2364e6763094dae90a956eaa71ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e707aaf4a910fdde96979aff7ad28df8c6cdb59bc47f34105c73a55e5d6163b2\",\"dweb:/ipfs/QmYEguAwm6LBX2n3ibvKPgqo6eRdsbMbxYqXwZbwq4Y8X2\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x90dea29aecfa0bc55f3ba86bd24d87b19726e2affa86292f4ba8052e85cc4d56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3518cea454999f659b0fd63f810ab61a7d568fe8ad974d84ab15febd321a0a5\",\"dweb:/ipfs/QmSvS87R4H68JuokmA4oZMELAB49uJfSxeLGfZuXB7dowZ\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/utils/Address.sol\":{\"keccak256\":\"0xb45dc9b431fd17029e917725b523f7302f31d3501c11f9bf4f985d2b088d36d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e276244483cce4d0765d5cd229141a3aa98761e0034736dcd7887e5235acb29\",\"dweb:/ipfs/QmTrizLJ2MCYuaG8YPwg9umQ3XvCd3xjrwkzjcjqvSxYH4\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/utils/Counters.sol\":{\"keccak256\":\"0x6fbbe955935a8833ccb2022ebae28494f149450d275a0624e51af35d4aab1890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62b13c3d4a46351896186219cfb5f413180a049c39ff7da9680648af006dfadc\",\"dweb:/ipfs/QmY5vv7wUqDakKsvb7NfMVkbSWhErt86CbrZBN9y3Af7yp\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/utils/EnumerableMap.sol\":{\"keccak256\":\"0xfc81f3ffdea8be5d013ba08cb95fb57234f4bdb282b650d38cee4e9db55a08fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c64fb755aa3ff4259ca83264099436bee73730a198aabdb0dca1eba489d28aa\",\"dweb:/ipfs/QmZ3gtLo24zcuKtWwnAUy17aNgVWb4ZMLxJFJMnBTVMVr8\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/utils/EnumerableSet.sol\":{\"keccak256\":\"0xf128d04c8d68c52bf056feb2ddfe1fa775085573fcbcb42fd3429ab5ee5403dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://253a5a0c9894ad117b7cb73c571a7587e0ed271b60cb6f156be568855169b177\",\"dweb:/ipfs/QmZZJDNoWNbUo9MF18jw2pfUy2Z64L2q4Y3jGLia14RapV\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/utils/Pausable.sol\":{\"keccak256\":\"0xc3d606cfb7d9b7250ed2dd614e1ab1511ed8cdcc7a7c423c3a5b993e00ea0543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4230f822b6508de19e5ae0170ab9e667711da3b10317fe389b0a9f6cbaaa11b2\",\"dweb:/ipfs/Qmapwh2SdVRpuHVftsvyvf9GQGn4sBUa8jP3hSSBpnJxNR\"]},\"/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/utils/Strings.sol\":{\"keccak256\":\"0xe0b9e736a5f1b7c3e93bb95296afdfe7f869904f12638726f5b7420062166ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0cd661940fe6b903b4680ddb35256bbd69df06e4efac8fbd1727d26950d61e3\",\"dweb:/ipfs/QmTqZPafYrMrSfdt9nuVxrz46jreK5aVRvhbrB6K5rBKN7\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002cb938038062002cb9833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084640100000000821115620001bc57600080fd5b908301906020820185811115620001d257600080fd5b8251640100000000811182820188101715620001ed57600080fd5b82525081516020918201929091019080838360005b838110156200021c57818101518382015260200162000202565b50505050905090810190601f1680156200024a5780820380516001836020036101000a031916815260200191505b5060405250849150839050620002676301ffc9a760e01b6200035d565b81516200027c9060079060208501906200050e565b508051620002929060089060208401906200050e565b50620002a56380ac58cd60e01b6200035d565b620002b7635b5e139f60e01b6200035d565b620002c963780e9d6360e01b6200035d565b5050600b805460ff19169055620002eb6000620002e5620003e5565b620003e9565b6200031a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620002e5620003e5565b620003497f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620002e5620003e5565b6200035481620003f9565b505050620005aa565b6001600160e01b03198082161415620003bd576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b3390565b620003f582826200040e565b5050565b8051620003f590600a9060208401906200050e565b60008281526020818152604090912062000433918390620012c762000487821b17901c565b15620003f55762000443620003e5565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200049e836001600160a01b038416620004a7565b90505b92915050565b6000620004b58383620004f6565b620004ed57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620004a1565b506000620004a1565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200055157805160ff191683800117855562000581565b8280016001018555821562000581579182015b828111156200058157825182559160200191906001019062000564565b506200058f92915062000593565b5090565b5b808211156200058f576000815560010162000594565b6126ff80620005ba6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6278421161010f578063a22cb465116100a2578063d539139311610071578063d53913931461068b578063d547741f14610693578063e63ab1e9146106bf578063e985e9c5146106c7576101f0565b8063a22cb4651461055d578063b88d4fde1461058b578063c87b56dd14610651578063ca15c8731461066e576101f0565b80639010d07c116100de5780639010d07c146104fe57806391d148541461052157806395d89b411461054d578063a217fddf14610555576101f0565b80636a627842146104a25780636c0360eb146104c857806370a08231146104d05780638456cb59146104f6576101f0565b80632f745c591161018757806342966c681161015657806342966c68146104435780634f6ccce7146104605780635c975abb1461047d5780636352211e14610485576101f0565b80632f745c59146103ad57806336568abe146103d95780633f4ba83a1461040557806342842e0e1461040d576101f0565b806318160ddd116101c357806318160ddd1461031457806323b872dd1461032e578063248a9ca3146103645780632f2ff15d14610381576101f0565b806301ffc9a7146101f557806306fdde0314610230578063081812fc146102ad578063095ea7b3146102e6575b600080fd5b61021c6004803603602081101561020b57600080fd5b50356001600160e01b0319166106f5565b604080519115158252519081900360200190f35b610238610718565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027257818101518382015260200161025a565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ca600480360360208110156102c357600080fd5b50356107ae565b604080516001600160a01b039092168252519081900360200190f35b610312600480360360408110156102fc57600080fd5b506001600160a01b038135169060200135610810565b005b61031c6108eb565b60408051918252519081900360200190f35b6103126004803603606081101561034457600080fd5b506001600160a01b038135811691602081013590911690604001356108fc565b61031c6004803603602081101561037a57600080fd5b5035610953565b6103126004803603604081101561039757600080fd5b50803590602001356001600160a01b0316610968565b61031c600480360360408110156103c357600080fd5b506001600160a01b0381351690602001356109d4565b610312600480360360408110156103ef57600080fd5b50803590602001356001600160a01b03166109ff565b610312610a60565b6103126004803603606081101561042357600080fd5b506001600160a01b03813581169160208101359091169060400135610ad1565b6103126004803603602081101561045957600080fd5b5035610aec565b61031c6004803603602081101561047657600080fd5b5035610b3e565b61021c610b54565b6102ca6004803603602081101561049b57600080fd5b5035610b5d565b610312600480360360208110156104b857600080fd5b50356001600160a01b0316610b85565b610238610c09565b61031c600480360360208110156104e657600080fd5b50356001600160a01b0316610c6a565b610312610cd2565b6102ca6004803603604081101561051457600080fd5b5080359060200135610d41565b61021c6004803603604081101561053757600080fd5b50803590602001356001600160a01b0316610d59565b610238610d71565b61031c610dd2565b6103126004803603604081101561057357600080fd5b506001600160a01b0381351690602001351515610dd7565b610312600480360360808110156105a157600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156105dc57600080fd5b8201836020820111156105ee57600080fd5b8035906020019184600183028401116401000000008311171561061057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610edc945050505050565b6102386004803603602081101561066757600080fd5b5035610f3a565b61031c6004803603602081101561068457600080fd5b50356111e1565b61031c6111f8565b610312600480360360408110156106a957600080fd5b50803590602001356001600160a01b031661121c565b61031c611275565b61021c600480360360408110156106dd57600080fd5b506001600160a01b0381358116916020013516611299565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a45780601f10610779576101008083540402835291602001916107a4565b820191906000526020600020905b81548152906001019060200180831161078757829003601f168201915b5050505050905090565b60006107b9826112dc565b6107f45760405162461bcd60e51b815260040180806020018281038252602c815260200180612518602c913960400191505060405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061081b82610b5d565b9050806001600160a01b0316836001600160a01b0316141561086e5760405162461bcd60e51b815260040180806020018281038252602181526020018061259c6021913960400191505060405180910390fd5b806001600160a01b03166108806112e9565b6001600160a01b031614806108a157506108a18161089c6112e9565b611299565b6108dc5760405162461bcd60e51b815260040180806020018281038252603881526020018061246b6038913960400191505060405180910390fd5b6108e683836112ed565b505050565b60006108f7600361135b565b905090565b61090d6109076112e9565b82611366565b6109485760405162461bcd60e51b81526004018080602001828103825260318152602001806125bd6031913960400191505060405180910390fd5b6108e683838361140a565b60009081526020819052604090206002015490565b60008281526020819052604090206002015461098b906109866112e9565b610d59565b6109c65760405162461bcd60e51b815260040180806020018281038252602f81526020018061234c602f913960400191505060405180910390fd5b6109d08282611556565b5050565b6001600160a01b03821660009081526002602052604081206109f690836115bf565b90505b92915050565b610a076112e9565b6001600160a01b0316816001600160a01b031614610a565760405162461bcd60e51b815260040180806020018281038252602f81526020018061269b602f913960400191505060405180910390fd5b6109d082826115cb565b610a8c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109866112e9565b610ac75760405162461bcd60e51b815260040180806020018281038252604081526020018061265b6040913960400191505060405180910390fd5b610acf611634565b565b6108e683838360405180602001604052806000815250610edc565b610af76109076112e9565b610b325760405162461bcd60e51b815260040180806020018281038252603081526020018061262b6030913960400191505060405180910390fd5b610b3b816116d2565b50565b600080610b4c60038461179f565b509392505050565b600b5460ff1690565b60006109f9826040518060600160405280602981526020016124cd60299139600391906117bb565b610bb17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109866112e9565b610bec5760405162461bcd60e51b815260040180806020018281038252603d8152602001806125ee603d913960400191505060405180910390fd5b610bff81610bfa600c6117d2565b6117d6565b610b3b600c611904565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a45780601f10610779576101008083540402835291602001916107a4565b60006001600160a01b038216610cb15760405162461bcd60e51b815260040180806020018281038252602a8152602001806124a3602a913960400191505060405180910390fd5b6001600160a01b03821660009081526002602052604090206109f99061135b565b610cfe7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109866112e9565b610d395760405162461bcd60e51b815260040180806020018281038252603e8152602001806123ad603e913960400191505060405180910390fd5b610acf61190d565b60008281526020819052604081206109f690836115bf565b60008281526020819052604081206109f6908361198e565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a45780601f10610779576101008083540402835291602001916107a4565b600081565b610ddf6112e9565b6001600160a01b0316826001600160a01b03161415610e45576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060066000610e526112e9565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610e966112e9565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b610eed610ee76112e9565b83611366565b610f285760405162461bcd60e51b81526004018080602001828103825260318152602001806125bd6031913960400191505060405180910390fd5b610f34848484846119a3565b50505050565b6060610f45826112dc565b610f805760405162461bcd60e51b815260040180806020018281038252602f81526020018061256d602f913960400191505060405180910390fd5b60008281526009602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156110155780601f10610fea57610100808354040283529160200191611015565b820191906000526020600020905b815481529060010190602001808311610ff857829003601f168201915b5050600a549394505050506002600019610100600184161502019091160461103e579050610713565b80511561110f57600a8160405160200180838054600181600116156101000203166002900480156110a65780601f106110845761010080835404028352918201916110a6565b820191906000526020600020905b815481529060010190602001808311611092575b5050825160208401908083835b602083106110d25780518252601f1990920191602091820191016110b3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610713565b600a61111a846119f5565b60405160200180838054600181600116156101000203166002900480156111785780601f10611156576101008083540402835291820191611178565b820191906000526020600020905b815481529060010190602001808311611164575b5050825160208401908083835b602083106111a45780518252601f199092019160209182019101611185565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b60008181526020819052604081206109f99061135b565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b60008281526020819052604090206002015461123a906109866112e9565b610a565760405162461bcd60e51b815260040180806020018281038252603081526020018061243b6030913960400191505060405180910390fd5b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006109f6836001600160a01b038416611ad0565b60006109f9600383611b1a565b3390565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061132282610b5d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109f9826117d2565b6000611371826112dc565b6113ac5760405162461bcd60e51b815260040180806020018281038252602c81526020018061240f602c913960400191505060405180910390fd5b60006113b783610b5d565b9050806001600160a01b0316846001600160a01b031614806113f25750836001600160a01b03166113e7846107ae565b6001600160a01b0316145b8061140257506114028185611299565b949350505050565b826001600160a01b031661141d82610b5d565b6001600160a01b0316146114625760405162461bcd60e51b81526004018080602001828103825260298152602001806125446029913960400191505060405180910390fd5b6001600160a01b0382166114a75760405162461bcd60e51b81526004018080602001828103825260248152602001806123eb6024913960400191505060405180910390fd5b6114b2838383611b26565b6114bd6000826112ed565b6001600160a01b03831660009081526002602052604090206114df9082611b31565b506001600160a01b03821660009081526002602052604090206115029082611b3d565b5061150f60038284611b49565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600082815260208190526040902061156e90826112c7565b156109d05761157b6112e9565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006109f68383611b5f565b60008281526020819052604090206115e39082611bc3565b156109d0576115f06112e9565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600b5460ff16611682576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b600b805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6116b56112e9565b604080516001600160a01b039092168252519081900360200190a1565b60006116dd82610b5d565b90506116eb81600084611b26565b6116f66000836112ed565b6000828152600960205260409020546002600019610100600184161502019091160415611734576000828152600960205260408120611734916122a6565b6001600160a01b03811660009081526002602052604090206117569083611b31565b50611762600383611bd8565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008080806117ae8686611be4565b9097909650945050505050565b60006117c8848484611c5f565b90505b9392505050565b5490565b6001600160a01b038216611831576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61183a816112dc565b1561188c576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61189860008383611b26565b6001600160a01b03821660009081526002602052604090206118ba9082611b3d565b506118c760038284611b49565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80546001019055565b600b5460ff1615611958576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b600b805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116b56112e9565b60006109f6836001600160a01b038416611d29565b6119ae84848461140a565b6119ba84848484611d41565b610f345760405162461bcd60e51b815260040180806020018281038252603281526020018061237b6032913960400191505060405180910390fd5b606081611a1a57506040805180820190915260018152600360fc1b6020820152610713565b8160005b8115611a3257600101600a82049150611a1e565b60608167ffffffffffffffff81118015611a4b57600080fd5b506040519080825280601f01601f191660200182016040528015611a76576020820181803683370190505b50859350905060001982015b8315611ac757600a840660300160f81b82828060019003935081518110611aa557fe5b60200101906001600160f81b031916908160001a905350600a84049350611a82565b50949350505050565b6000611adc8383611d29565b611b12575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556109f9565b5060006109f9565b60006109f68383611d29565b6108e6838383611ea9565b60006109f68383611ef8565b60006109f68383611ad0565b60006117c884846001600160a01b038516611fbe565b81546000908210611ba15760405162461bcd60e51b81526004018080602001828103825260228152602001806122ff6022913960400191505060405180910390fd5b826000018281548110611bb057fe5b9060005260206000200154905092915050565b60006109f6836001600160a01b038416611ef8565b60006109f68383612055565b815460009081908310611c285760405162461bcd60e51b81526004018080602001828103825260228152602001806124f66022913960400191505060405180910390fd5b6000846000018481548110611c3957fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611cfa5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611cbf578181015183820152602001611ca7565b50505050905090810190601f168015611cec5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611d0d57fe5b9060005260206000209060020201600101549150509392505050565b60009081526001919091016020526040902054151590565b6000611d55846001600160a01b0316612129565b611d6157506001611402565b6060611e6f630a85bd0160e11b611d766112e9565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ddd578181015183820152602001611dc5565b50505050905090810190601f168015611e0a5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505060405180606001604052806032815260200161237b603291396001600160a01b038816919061212f565b90506000818060200190516020811015611e8857600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b611eb48383836108e6565b611ebc610b54565b156108e65760405162461bcd60e51b815260040180806020018281038252602b815260200180612321602b913960400191505060405180910390fd5b60008181526001830160205260408120548015611fb45783546000198083019190810190600090879083908110611f2b57fe5b9060005260206000200154905080876000018481548110611f4857fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611f7857fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506109f9565b60009150506109f9565b6000828152600184016020526040812054806120235750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556117cb565b8285600001600183038154811061203657fe5b90600052602060002090600202016001018190555060009150506117cb565b60008181526001830160205260408120548015611fb4578354600019808301919081019060009087908390811061208857fe5b90600052602060002090600202019050808760000184815481106120a857fe5b6000918252602080832084546002909302019182556001938401549184019190915583548252898301905260409020908401905586548790806120e757fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506109f99350505050565b3b151590565b60606117c88484600085606061214485612129565b612195576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106121d45780518252601f1990920191602091820191016121b5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612236576040519150601f19603f3d011682016040523d82523d6000602084013e61223b565b606091505b5091509150811561224f5791506114029050565b80511561225f5780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315611cbf578181015183820152602001611ca7565b50805460018160011615610100020316600290046000825580601f106122cc5750610b3b565b601f016020900490600052602060002090810190610b3b91905b808211156122fa57600081556001016122e6565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e744552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bb9d7d3529fec4da69f4cf9c0fb1a1f866a82ca748ed528f562fff5f9f1ac2ec64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6278421161010f578063a22cb465116100a2578063d539139311610071578063d53913931461068b578063d547741f14610693578063e63ab1e9146106bf578063e985e9c5146106c7576101f0565b8063a22cb4651461055d578063b88d4fde1461058b578063c87b56dd14610651578063ca15c8731461066e576101f0565b80639010d07c116100de5780639010d07c146104fe57806391d148541461052157806395d89b411461054d578063a217fddf14610555576101f0565b80636a627842146104a25780636c0360eb146104c857806370a08231146104d05780638456cb59146104f6576101f0565b80632f745c591161018757806342966c681161015657806342966c68146104435780634f6ccce7146104605780635c975abb1461047d5780636352211e14610485576101f0565b80632f745c59146103ad57806336568abe146103d95780633f4ba83a1461040557806342842e0e1461040d576101f0565b806318160ddd116101c357806318160ddd1461031457806323b872dd1461032e578063248a9ca3146103645780632f2ff15d14610381576101f0565b806301ffc9a7146101f557806306fdde0314610230578063081812fc146102ad578063095ea7b3146102e6575b600080fd5b61021c6004803603602081101561020b57600080fd5b50356001600160e01b0319166106f5565b604080519115158252519081900360200190f35b610238610718565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027257818101518382015260200161025a565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ca600480360360208110156102c357600080fd5b50356107ae565b604080516001600160a01b039092168252519081900360200190f35b610312600480360360408110156102fc57600080fd5b506001600160a01b038135169060200135610810565b005b61031c6108eb565b60408051918252519081900360200190f35b6103126004803603606081101561034457600080fd5b506001600160a01b038135811691602081013590911690604001356108fc565b61031c6004803603602081101561037a57600080fd5b5035610953565b6103126004803603604081101561039757600080fd5b50803590602001356001600160a01b0316610968565b61031c600480360360408110156103c357600080fd5b506001600160a01b0381351690602001356109d4565b610312600480360360408110156103ef57600080fd5b50803590602001356001600160a01b03166109ff565b610312610a60565b6103126004803603606081101561042357600080fd5b506001600160a01b03813581169160208101359091169060400135610ad1565b6103126004803603602081101561045957600080fd5b5035610aec565b61031c6004803603602081101561047657600080fd5b5035610b3e565b61021c610b54565b6102ca6004803603602081101561049b57600080fd5b5035610b5d565b610312600480360360208110156104b857600080fd5b50356001600160a01b0316610b85565b610238610c09565b61031c600480360360208110156104e657600080fd5b50356001600160a01b0316610c6a565b610312610cd2565b6102ca6004803603604081101561051457600080fd5b5080359060200135610d41565b61021c6004803603604081101561053757600080fd5b50803590602001356001600160a01b0316610d59565b610238610d71565b61031c610dd2565b6103126004803603604081101561057357600080fd5b506001600160a01b0381351690602001351515610dd7565b610312600480360360808110156105a157600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156105dc57600080fd5b8201836020820111156105ee57600080fd5b8035906020019184600183028401116401000000008311171561061057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610edc945050505050565b6102386004803603602081101561066757600080fd5b5035610f3a565b61031c6004803603602081101561068457600080fd5b50356111e1565b61031c6111f8565b610312600480360360408110156106a957600080fd5b50803590602001356001600160a01b031661121c565b61031c611275565b61021c600480360360408110156106dd57600080fd5b506001600160a01b0381358116916020013516611299565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a45780601f10610779576101008083540402835291602001916107a4565b820191906000526020600020905b81548152906001019060200180831161078757829003601f168201915b5050505050905090565b60006107b9826112dc565b6107f45760405162461bcd60e51b815260040180806020018281038252602c815260200180612518602c913960400191505060405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061081b82610b5d565b9050806001600160a01b0316836001600160a01b0316141561086e5760405162461bcd60e51b815260040180806020018281038252602181526020018061259c6021913960400191505060405180910390fd5b806001600160a01b03166108806112e9565b6001600160a01b031614806108a157506108a18161089c6112e9565b611299565b6108dc5760405162461bcd60e51b815260040180806020018281038252603881526020018061246b6038913960400191505060405180910390fd5b6108e683836112ed565b505050565b60006108f7600361135b565b905090565b61090d6109076112e9565b82611366565b6109485760405162461bcd60e51b81526004018080602001828103825260318152602001806125bd6031913960400191505060405180910390fd5b6108e683838361140a565b60009081526020819052604090206002015490565b60008281526020819052604090206002015461098b906109866112e9565b610d59565b6109c65760405162461bcd60e51b815260040180806020018281038252602f81526020018061234c602f913960400191505060405180910390fd5b6109d08282611556565b5050565b6001600160a01b03821660009081526002602052604081206109f690836115bf565b90505b92915050565b610a076112e9565b6001600160a01b0316816001600160a01b031614610a565760405162461bcd60e51b815260040180806020018281038252602f81526020018061269b602f913960400191505060405180910390fd5b6109d082826115cb565b610a8c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109866112e9565b610ac75760405162461bcd60e51b815260040180806020018281038252604081526020018061265b6040913960400191505060405180910390fd5b610acf611634565b565b6108e683838360405180602001604052806000815250610edc565b610af76109076112e9565b610b325760405162461bcd60e51b815260040180806020018281038252603081526020018061262b6030913960400191505060405180910390fd5b610b3b816116d2565b50565b600080610b4c60038461179f565b509392505050565b600b5460ff1690565b60006109f9826040518060600160405280602981526020016124cd60299139600391906117bb565b610bb17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109866112e9565b610bec5760405162461bcd60e51b815260040180806020018281038252603d8152602001806125ee603d913960400191505060405180910390fd5b610bff81610bfa600c6117d2565b6117d6565b610b3b600c611904565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a45780601f10610779576101008083540402835291602001916107a4565b60006001600160a01b038216610cb15760405162461bcd60e51b815260040180806020018281038252602a8152602001806124a3602a913960400191505060405180910390fd5b6001600160a01b03821660009081526002602052604090206109f99061135b565b610cfe7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109866112e9565b610d395760405162461bcd60e51b815260040180806020018281038252603e8152602001806123ad603e913960400191505060405180910390fd5b610acf61190d565b60008281526020819052604081206109f690836115bf565b60008281526020819052604081206109f6908361198e565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a45780601f10610779576101008083540402835291602001916107a4565b600081565b610ddf6112e9565b6001600160a01b0316826001600160a01b03161415610e45576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060066000610e526112e9565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610e966112e9565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b610eed610ee76112e9565b83611366565b610f285760405162461bcd60e51b81526004018080602001828103825260318152602001806125bd6031913960400191505060405180910390fd5b610f34848484846119a3565b50505050565b6060610f45826112dc565b610f805760405162461bcd60e51b815260040180806020018281038252602f81526020018061256d602f913960400191505060405180910390fd5b60008281526009602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156110155780601f10610fea57610100808354040283529160200191611015565b820191906000526020600020905b815481529060010190602001808311610ff857829003601f168201915b5050600a549394505050506002600019610100600184161502019091160461103e579050610713565b80511561110f57600a8160405160200180838054600181600116156101000203166002900480156110a65780601f106110845761010080835404028352918201916110a6565b820191906000526020600020905b815481529060010190602001808311611092575b5050825160208401908083835b602083106110d25780518252601f1990920191602091820191016110b3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610713565b600a61111a846119f5565b60405160200180838054600181600116156101000203166002900480156111785780601f10611156576101008083540402835291820191611178565b820191906000526020600020905b815481529060010190602001808311611164575b5050825160208401908083835b602083106111a45780518252601f199092019160209182019101611185565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b60008181526020819052604081206109f99061135b565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b60008281526020819052604090206002015461123a906109866112e9565b610a565760405162461bcd60e51b815260040180806020018281038252603081526020018061243b6030913960400191505060405180910390fd5b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006109f6836001600160a01b038416611ad0565b60006109f9600383611b1a565b3390565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061132282610b5d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109f9826117d2565b6000611371826112dc565b6113ac5760405162461bcd60e51b815260040180806020018281038252602c81526020018061240f602c913960400191505060405180910390fd5b60006113b783610b5d565b9050806001600160a01b0316846001600160a01b031614806113f25750836001600160a01b03166113e7846107ae565b6001600160a01b0316145b8061140257506114028185611299565b949350505050565b826001600160a01b031661141d82610b5d565b6001600160a01b0316146114625760405162461bcd60e51b81526004018080602001828103825260298152602001806125446029913960400191505060405180910390fd5b6001600160a01b0382166114a75760405162461bcd60e51b81526004018080602001828103825260248152602001806123eb6024913960400191505060405180910390fd5b6114b2838383611b26565b6114bd6000826112ed565b6001600160a01b03831660009081526002602052604090206114df9082611b31565b506001600160a01b03821660009081526002602052604090206115029082611b3d565b5061150f60038284611b49565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600082815260208190526040902061156e90826112c7565b156109d05761157b6112e9565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006109f68383611b5f565b60008281526020819052604090206115e39082611bc3565b156109d0576115f06112e9565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600b5460ff16611682576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b600b805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6116b56112e9565b604080516001600160a01b039092168252519081900360200190a1565b60006116dd82610b5d565b90506116eb81600084611b26565b6116f66000836112ed565b6000828152600960205260409020546002600019610100600184161502019091160415611734576000828152600960205260408120611734916122a6565b6001600160a01b03811660009081526002602052604090206117569083611b31565b50611762600383611bd8565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008080806117ae8686611be4565b9097909650945050505050565b60006117c8848484611c5f565b90505b9392505050565b5490565b6001600160a01b038216611831576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61183a816112dc565b1561188c576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61189860008383611b26565b6001600160a01b03821660009081526002602052604090206118ba9082611b3d565b506118c760038284611b49565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80546001019055565b600b5460ff1615611958576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b600b805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116b56112e9565b60006109f6836001600160a01b038416611d29565b6119ae84848461140a565b6119ba84848484611d41565b610f345760405162461bcd60e51b815260040180806020018281038252603281526020018061237b6032913960400191505060405180910390fd5b606081611a1a57506040805180820190915260018152600360fc1b6020820152610713565b8160005b8115611a3257600101600a82049150611a1e565b60608167ffffffffffffffff81118015611a4b57600080fd5b506040519080825280601f01601f191660200182016040528015611a76576020820181803683370190505b50859350905060001982015b8315611ac757600a840660300160f81b82828060019003935081518110611aa557fe5b60200101906001600160f81b031916908160001a905350600a84049350611a82565b50949350505050565b6000611adc8383611d29565b611b12575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556109f9565b5060006109f9565b60006109f68383611d29565b6108e6838383611ea9565b60006109f68383611ef8565b60006109f68383611ad0565b60006117c884846001600160a01b038516611fbe565b81546000908210611ba15760405162461bcd60e51b81526004018080602001828103825260228152602001806122ff6022913960400191505060405180910390fd5b826000018281548110611bb057fe5b9060005260206000200154905092915050565b60006109f6836001600160a01b038416611ef8565b60006109f68383612055565b815460009081908310611c285760405162461bcd60e51b81526004018080602001828103825260228152602001806124f66022913960400191505060405180910390fd5b6000846000018481548110611c3957fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611cfa5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611cbf578181015183820152602001611ca7565b50505050905090810190601f168015611cec5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611d0d57fe5b9060005260206000209060020201600101549150509392505050565b60009081526001919091016020526040902054151590565b6000611d55846001600160a01b0316612129565b611d6157506001611402565b6060611e6f630a85bd0160e11b611d766112e9565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ddd578181015183820152602001611dc5565b50505050905090810190601f168015611e0a5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505060405180606001604052806032815260200161237b603291396001600160a01b038816919061212f565b90506000818060200190516020811015611e8857600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b611eb48383836108e6565b611ebc610b54565b156108e65760405162461bcd60e51b815260040180806020018281038252602b815260200180612321602b913960400191505060405180910390fd5b60008181526001830160205260408120548015611fb45783546000198083019190810190600090879083908110611f2b57fe5b9060005260206000200154905080876000018481548110611f4857fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611f7857fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506109f9565b60009150506109f9565b6000828152600184016020526040812054806120235750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556117cb565b8285600001600183038154811061203657fe5b90600052602060002090600202016001018190555060009150506117cb565b60008181526001830160205260408120548015611fb4578354600019808301919081019060009087908390811061208857fe5b90600052602060002090600202019050808760000184815481106120a857fe5b6000918252602080832084546002909302019182556001938401549184019190915583548252898301905260409020908401905586548790806120e757fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506109f99350505050565b3b151590565b60606117c88484600085606061214485612129565b612195576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106121d45780518252601f1990920191602091820191016121b5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612236576040519150601f19603f3d011682016040523d82523d6000602084013e61223b565b606091505b5091509150811561224f5791506114029050565b80511561225f5780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315611cbf578181015183820152602001611ca7565b50805460018160011615610100020316600290046000825580601f106122cc5750610b3b565b601f016020900490600052602060002090810190610b3b91905b808211156122fa57600081556001016122e6565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e744552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bb9d7d3529fec4da69f4cf9c0fb1a1f866a82ca748ed528f562fff5f9f1ac2ec64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "917:2690:135:-:0;;;1517:299;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1517:299:135;;;;;;;;;;-1:-1:-1;1517:299:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1517:299:135;;;;;;;;;;-1:-1:-1;1517:299:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1517:299:135;;;;;;;;;;-1:-1:-1;1517:299:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1517:299:135;;-1:-1:-1;1608:4:135;;-1:-1:-1;1614:6:135;;-1:-1:-1;777:40:64;-1:-1:-1;;;777:18:64;:40::i;:::-;3732:12:157;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3755:16:157;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3862:40:157;-1:-1:-1;;;3862:18:157;:40::i;:::-;3913:49;-1:-1:-1;;;3913:18:157;:49::i;:::-;3973:51;-1:-1:-1;;;3973:18:157;:51::i;:::-;-1:-1:-1;;955:7:175;:15;;-1:-1:-1;;955:15:175;;;1633:44:135::1;965:5:175::0;1664:12:135::1;:10;:12::i;:::-;1633:10;:44::i;:::-;1690:37;1104:24;1714:12;:10;:12::i;1690:37::-;1738;1173:24;1762:12;:10;:12::i;1738:37::-;1788:20;1800:7:::0;1788:11:::1;:20::i;:::-;1517:299:::0;;;917:2690;;1531:201:64;-1:-1:-1;;;;;;1615:25:64;;;;;1607:66;;;;;-1:-1:-1;;;1607:66:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1684:33:64;;;;;1720:4;1684:33;;;;;;;;:40;;-1:-1:-1;;1684:40:64;;;;;;1531:201::o;605:106:54:-;693:10;605:106;:::o;6769:112:60:-;6848:25;6859:4;6865:7;6848:10;:25::i;:::-;6769:112;;:::o;15070:100:157:-;15143:19;;;;:8;;:19;;;;;:::i;7220:188:60:-;7294:6;:12;;;;;;;;;;;:33;;7319:7;;7294:24;;;;;:33;;:::i;:::-;7290:111;;;7376:12;:10;:12::i;:::-;-1:-1:-1;;;;;7349:40:60;7367:7;-1:-1:-1;;;;;7349:40:60;7361:4;7349:40;;;;;;;;;;7220:188;;:::o;5010:143:174:-;5080:4;5104:41;5109:3;-1:-1:-1;;;;;5129:14:174;;5104:4;:41::i;:::-;5097:48;;5010:143;;;;;:::o;1664:414::-;1727:4;1749:21;1759:3;1764:5;1749:9;:21::i;:::-;1744:327;;-1:-1:-1;1787:23:174;;;;;;;;:11;:23;;;;;;;;;;;;;1970:18;;1948:19;;;:12;;;:19;;;;;;:40;;;;2003:11;;1744:327;-1:-1:-1;2054:5:174;2047:12;;3884:129;3957:4;3981:19;;;:12;;;;;:19;;;;;;:24;;;3884:129::o;917:2690:135:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;917:2690:135;;;-1:-1:-1;917:2690:135;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "917:2690:135:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;982:142:64;;;;;;;;;;;;;;;;-1:-1:-1;982:142:64;-1:-1:-1;;;;;;982:142:64;;:::i;:::-;;;;;;;;;;;;;;;;;;4609:92:157;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7296:213;;;;;;;;;;;;;;;;-1:-1:-1;7296:213:157;;:::i;:::-;;;;-1:-1:-1;;;;;7296:213:157;;;;;;;;;;;;;;6840:390;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6840:390:157;;;;;;;;:::i;:::-;;6334:203;;;:::i;:::-;;;;;;;;;;;;;;;;8170:305;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8170:305:157;;;;;;;;;;;;;;;;;:::i;4392:114:60:-;;;;;;;;;;;;;;;;-1:-1:-1;4392:114:60;;:::i;4768:227::-;;;;;;;;;;;;;;;;-1:-1:-1;4768:227:60;;;;;;-1:-1:-1;;;;;4768:227:60;;:::i;6104:154:157:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6104:154:157;;;;;;;;:::i;5977:209:60:-;;;;;;;;;;;;;;;;-1:-1:-1;5977:209:60;;;;;;-1:-1:-1;;;;;5977:209:60;;:::i;3224:185:135:-;;;:::i;8546:151:157:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8546:151:157;;;;;;;;;;;;;;;;;:::i;464:245:158:-;;;;;;;;;;;;;;;;-1:-1:-1;464:245:158;;:::i;6614:164:157:-;;;;;;;;;;;;;;;;-1:-1:-1;6614:164:157;;:::i;1078:78:175:-;;;:::i;4373:169:157:-;;;;;;;;;;;;;;;;-1:-1:-1;4373:169:157;;:::i;2204:407:135:-;;;;;;;;;;;;;;;;-1:-1:-1;2204:407:135;-1:-1:-1;;;;;2204:407:135;;:::i;5931:89:157:-;;;:::i;4096:215::-;;;;;;;;;;;;;;;;-1:-1:-1;4096:215:157;-1:-1:-1;;;;;4096:215:157;;:::i;2826:179:135:-;;;:::i;4065:138:60:-;;;;;;;;;;;;;;;;-1:-1:-1;4065:138:60;;;;;;;:::i;3026:139::-;;;;;;;;;;;;;;;;-1:-1:-1;3026:139:60;;;;;;-1:-1:-1;;;;;3026:139:60;;:::i;4770:96:157:-;;;:::i;1771:49:60:-;;;:::i;7581:295:157:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7581:295:157;;;;;;;;;;:::i;8768:285::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8768:285:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8768:285:157;;-1:-1:-1;8768:285:157;;-1:-1:-1;;;;;8768:285:157:i;4937:755::-;;;;;;;;;;;;;;;;-1:-1:-1;4937:755:157;;:::i;3339:127:60:-;;;;;;;;;;;;;;;;-1:-1:-1;3339:127:60;;:::i;1066:62:135:-;;;:::i;5240:230:60:-;;;;;;;;;;;;;;;;-1:-1:-1;5240:230:60;;;;;;-1:-1:-1;;;;;5240:230:60;;:::i;1135:62:135:-;;;:::i;7947:156:157:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7947:156:157;;;;;;;;;;:::i;982:142:64:-;-1:-1:-1;;;;;;1083:33:64;;1059:4;1083:33;;;:20;:33;;;;;;;;982:142;;;;:::o;4609:92:157:-;4688:5;4681:12;;;;;;;;-1:-1:-1;;4681:12:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4655:13;;4681:12;;4688:5;;4681:12;;4688:5;4681:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4609:92;:::o;7296:213::-;7364:7;7392:16;7400:7;7392;:16::i;:::-;7384:73;;;;-1:-1:-1;;;7384:73:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7477:24:157;;;;:15;:24;;;;;;-1:-1:-1;;;;;7477:24:157;;7296:213::o;6840:390::-;6921:13;6937:16;6945:7;6937;:16::i;:::-;6921:32;;6978:5;-1:-1:-1;;;;;6972:11:157;:2;-1:-1:-1;;;;;6972:11:157;;;6964:57;;;;-1:-1:-1;;;6964:57:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7058:5;-1:-1:-1;;;;;7042:21:157;:12;:10;:12::i;:::-;-1:-1:-1;;;;;7042:21:157;;:62;;;;7067:37;7084:5;7091:12;:10;:12::i;:::-;7067:16;:37::i;:::-;7034:154;;;;-1:-1:-1;;;7034:154:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7201:21;7210:2;7214:7;7201:8;:21::i;:::-;6840:390;;;:::o;6334:203::-;6387:7;6508:21;:12;:19;:21::i;:::-;6501:28;;6334:203;:::o;8170:305::-;8331:41;8350:12;:10;:12::i;:::-;8364:7;8331:18;:41::i;:::-;8323:103;;;;-1:-1:-1;;;8323:103:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8439:28;8449:4;8455:2;8459:7;8439:9;:28::i;4392:114:60:-;4449:7;4476:12;;;;;;;;;;:22;;;;4392:114::o;4768:227::-;4860:6;:12;;;;;;;;;;:22;;;4852:45;;4884:12;:10;:12::i;:::-;4852:7;:45::i;:::-;4844:105;;;;-1:-1:-1;;;4844:105:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4962:25;4973:4;4979:7;4962:10;:25::i;:::-;4768:227;;:::o;6104:154:157:-;-1:-1:-1;;;;;6220:20:157;;6193:7;6220:20;;;:13;:20;;;;;:30;;6244:5;6220:23;:30::i;:::-;6213:37;;6104:154;;;;;:::o;5977:209:60:-;6075:12;:10;:12::i;:::-;-1:-1:-1;;;;;6064:23:60;:7;-1:-1:-1;;;;;6064:23:60;;6056:83;;;;-1:-1:-1;;;6056:83:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6152:26;6164:4;6170:7;6152:11;:26::i;3224:185:135:-;3277:34;1173:24;3298:12;:10;:12::i;3277:34::-;3269:111;;;;-1:-1:-1;;;3269:111:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3391:10;:8;:10::i;:::-;3224:185::o;8546:151:157:-;8650:39;8667:4;8673:2;8677:7;8650:39;;;;;;;;;;;;:16;:39::i;464:245:158:-;582:41;601:12;:10;:12::i;582:41::-;574:102;;;;-1:-1:-1;;;574:102:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:14;693:7;687:5;:14::i;:::-;464:245;:::o;6614:164:157:-;6681:7;;6723:22;:12;6739:5;6723:15;:22::i;:::-;-1:-1:-1;6701:44:157;6614:164;-1:-1:-1;;;6614:164:157:o;1078:78:175:-;1141:7;;;;1078:78;:::o;4373:169:157:-;4437:7;4464:70;4481:7;4464:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;2204:407:135:-;2264:34;1104:24;2285:12;:10;:12::i;2264:34::-;2256:108;;;;-1:-1:-1;;;2256:108:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2529:36;2535:2;2539:25;:15;:23;:25::i;:::-;2529:5;:36::i;:::-;2576:27;:15;:25;:27::i;5931:89:157:-;6004:8;5997:15;;;;;;;;-1:-1:-1;;5997:15:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5971:13;;5997:15;;6004:8;;5997:15;;6004:8;5997:15;;;;;;;;;;;;;;;;;;;;;;;;4096:215;4160:7;-1:-1:-1;;;;;4188:19:157;;4180:74;;;;-1:-1:-1;;;4180:74:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4274:20:157;;;;;;:13;:20;;;;;:29;;:27;:29::i;2826:179:135:-;2877:34;1173:24;2898:12;:10;:12::i;2877:34::-;2869:109;;;;-1:-1:-1;;;2869:109:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:8;:6;:8::i;4065:138:60:-;4138:7;4165:12;;;;;;;;;;:30;;4189:5;4165:23;:30::i;3026:139::-;3095:4;3119:12;;;;;;;;;;:38;;3149:7;3119:29;:38::i;4770:96:157:-;4851:7;4844:14;;;;;;;;-1:-1:-1;;4844:14:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4818:13;;4844:14;;4851:7;;4844:14;;4851:7;4844:14;;;;;;;;;;;;;;;;;;;;;;;;1771:49:60;1816:4;1771:49;:::o;7581:295:157:-;7696:12;:10;:12::i;:::-;-1:-1:-1;;;;;7684:24:157;:8;-1:-1:-1;;;;;7684:24:157;;;7676:62;;;;;-1:-1:-1;;;7676:62:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;7796:8;7751:18;:32;7770:12;:10;:12::i;:::-;-1:-1:-1;;;;;7751:32:157;;;;;;;;;;;;;;;;;-1:-1:-1;7751:32:157;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7751:53:157;;;;;;;;;;;7835:12;:10;:12::i;:::-;-1:-1:-1;;;;;7820:48:157;;7859:8;7820:48;;;;;;;;;;;;;;;;;;;;7581:295;;:::o;8768:285::-;8900:41;8919:12;:10;:12::i;:::-;8933:7;8900:18;:41::i;:::-;8892:103;;;;-1:-1:-1;;;8892:103:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9006:39;9020:4;9026:2;9030:7;9039:5;9006:13;:39::i;:::-;8768:285;;;;:::o;4937:755::-;5002:13;5036:16;5044:7;5036;:16::i;:::-;5028:76;;;;-1:-1:-1;;;5028:76:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5143:19;;;;:10;:19;;;;;;;;;5117:45;;;;;;-1:-1:-1;;5117:45:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5143:19;5117:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5244:8:157;5238:22;5117:45;;-1:-1:-1;;;;5238:22:157;-1:-1:-1;;5238:22:157;;;;;;;;;;;5234:76;;5289:9;-1:-1:-1;5282:16:157;;5234:76;5414:23;;:27;5410:112;;5489:8;5499:9;5472:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5472:37:157;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5472:37:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5458:52;;;;;5410:112;5654:8;5664:18;:7;:16;:18::i;:::-;5637:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5637:46:157;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5637:46:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5623:61;;;4937:755;;;:::o;3339:127:60:-;3402:7;3429:12;;;;;;;;;;:29;;:27;:29::i;1066:62:135:-;1104:24;1066:62;:::o;5240:230:60:-;5333:6;:12;;;;;;;;;;:22;;;5325:45;;5357:12;:10;:12::i;5325:45::-;5317:106;;;;-1:-1:-1;;;5317:106:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:62:135;1173:24;1135:62;:::o;7947:156:157:-;-1:-1:-1;;;;;8060:25:157;;;8036:4;8060:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7947:156::o;5010:143:174:-;5080:4;5104:41;5109:3;-1:-1:-1;;;;;5129:14:174;;5104:4;:41::i;10520:119:157:-;10577:4;10601:30;:12;10623:7;10601:21;:30::i;605:106:54:-;693:10;605:106;:::o;16347:158:157:-;16413:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;16413:29:157;-1:-1:-1;;;;;16413:29:157;;;;;;;;:24;;16467:16;16413:24;16467:7;:16::i;:::-;-1:-1:-1;;;;;16458:39:157;;;;;;;;;;;16347:158;;:::o;7224:123:173:-;7293:7;7320:19;7328:3;7320:7;:19::i;10806:333:157:-;10891:4;10916:16;10924:7;10916;:16::i;:::-;10908:73;;;;-1:-1:-1;;;10908:73:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10992:13;11008:16;11016:7;11008;:16::i;:::-;10992:32;;11054:5;-1:-1:-1;;;;;11043:16:157;:7;-1:-1:-1;;;;;11043:16:157;;:51;;;;11087:7;-1:-1:-1;;;;;11063:31:157;:20;11075:7;11063:11;:20::i;:::-;-1:-1:-1;;;;;11063:31:157;;11043:51;:87;;;;11098:32;11115:5;11122:7;11098:16;:32::i;:::-;11035:96;10806:333;-1:-1:-1;;;;10806:333:157:o;13895:574::-;14013:4;-1:-1:-1;;;;;13993:24:157;:16;14001:7;13993;:16::i;:::-;-1:-1:-1;;;;;13993:24:157;;13985:78;;;;-1:-1:-1;;;13985:78:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14082:16:157;;14074:65;;;;-1:-1:-1;;;14074:65:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14152:39;14173:4;14179:2;14183:7;14152:20;:39::i;:::-;14256:29;14273:1;14277:7;14256:8;:29::i;:::-;-1:-1:-1;;;;;14298:19:157;;;;;;:13;:19;;;;;:35;;14325:7;14298:26;:35::i;:::-;-1:-1:-1;;;;;;14344:17:157;;;;;;:13;:17;;;;;:30;;14366:7;14344:21;:30::i;:::-;-1:-1:-1;14387:29:157;:12;14404:7;14413:2;14387:16;:29::i;:::-;;14453:7;14449:2;-1:-1:-1;;;;;14434:27:157;14443:4;-1:-1:-1;;;;;14434:27:157;;;;;;;;;;;13895:574;;;:::o;7220:188:60:-;7294:6;:12;;;;;;;;;;:33;;7319:7;7294:24;:33::i;:::-;7290:111;;;7376:12;:10;:12::i;:::-;-1:-1:-1;;;;;7349:40:60;7367:7;-1:-1:-1;;;;;7349:40:60;7361:4;7349:40;;;;;;;;;;7220:188;;:::o;7888:137:174:-;7959:7;7994:22;7998:3;8010:5;7994:3;:22::i;7416:192:60:-;7491:6;:12;;;;;;;;;;:36;;7519:7;7491:27;:36::i;:::-;7487:114;;;7576:12;:10;:12::i;:::-;-1:-1:-1;;;;;7549:40:60;7567:7;-1:-1:-1;;;;;7549:40:60;7561:4;7549:40;;;;;;;;;;7416:192;;:::o;2127:120:175:-;1672:7;;;;1664:40;;;;;-1:-1:-1;;;1664:40:175;;;;;;;;;;;;-1:-1:-1;;;1664:40:175;;;;;;;;;;;;;;;2186:7:::1;:15:::0;;-1:-1:-1;;2186:15:175::1;::::0;;2217:22:::1;2226:12;:10;:12::i;:::-;2217:22;::::0;;-1:-1:-1;;;;;2217:22:175;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2127:120::o:0;13038:520:157:-;13098:13;13114:16;13122:7;13114;:16::i;:::-;13098:32;;13143:48;13164:5;13179:1;13183:7;13143:20;:48::i;:::-;13232:29;13249:1;13253:7;13232:8;:29::i;:::-;13320:19;;;;:10;:19;;;;;13314:33;;-1:-1:-1;;13314:33:157;;;;;;;;;;;:38;13310:97;;13376:19;;;;:10;:19;;;;;13369:26;;;:::i;:::-;-1:-1:-1;;;;;13419:20:157;;;;;;:13;:20;;;;;:36;;13447:7;13419:27;:36::i;:::-;-1:-1:-1;13468:28:157;:12;13488:7;13468:19;:28::i;:::-;-1:-1:-1;13514:36:157;;13542:7;;13538:1;;-1:-1:-1;;;;;13514:36:157;;;;;13538:1;;13514:36;13038:520;;:::o;7686:227:173:-;7766:7;;;;7826:22;7830:3;7842:5;7826:3;:22::i;:::-;7795:53;;;;-1:-1:-1;7686:227:173;-1:-1:-1;;;;;7686:227:173:o;8348:204::-;8455:7;8498:44;8503:3;8523;8529:12;8498:4;:44::i;:::-;8490:53;-1:-1:-1;8348:204:173;;;;;;:::o;1125:114:171:-;1217:14;;1125:114::o;12405:404:157:-;-1:-1:-1;;;;;12485:16:157;;12477:61;;;;;-1:-1:-1;;;12477:61:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12558:16;12566:7;12558;:16::i;:::-;12557:17;12549:58;;;;;-1:-1:-1;;;12549:58:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;12620:45;12649:1;12653:2;12657:7;12620:20;:45::i;:::-;-1:-1:-1;;;;;12678:17:157;;;;;;:13;:17;;;;;:30;;12700:7;12678:21;:30::i;:::-;-1:-1:-1;12721:29:157;:12;12738:7;12747:2;12721:16;:29::i;:::-;-1:-1:-1;12768:33:157;;12793:7;;-1:-1:-1;;;;;12768:33:157;;;12785:1;;12768:33;;12785:1;;12768:33;12405:404;;:::o;1247:181:171:-;1401:19;;1419:1;1401:19;;;1247:181::o;1868:118:175:-;1396:7;;;;1395:8;1387:37;;;;;-1:-1:-1;;;1387:37:175;;;;;;;;;;;;-1:-1:-1;;;1387:37:175;;;;;;;;;;;;;;;1928:7:::1;:14:::0;;-1:-1:-1;;1928:14:175::1;1938:4;1928:14;::::0;;1958:20:::1;1965:12;:10;:12::i;5564:158:174:-:0;5644:4;5668:46;5678:3;-1:-1:-1;;;;;5698:14:174;;5668:9;:46::i;9935:272:157:-;10049:28;10059:4;10065:2;10069:7;10049:9;:28::i;:::-;10096:48;10119:4;10125:2;10129:7;10138:5;10096:22;:48::i;:::-;10088:111;;;;-1:-1:-1;;;10088:111:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:744:178;269:13;490:10;486:53;;-1:-1:-1;517:10:178;;;;;;;;;;;;-1:-1:-1;;;517:10:178;;;;;;486:53;564:5;549:12;605:78;612:9;;605:78;;638:8;;669:2;661:10;;;;605:78;;;693:19;725:6;715:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;715:17:178;-1:-1:-1;787:5:178;;-1:-1:-1;693:39:178;-1:-1:-1;;;759:10:178;;803:115;810:9;;803:115;;877:2;870:4;:9;865:2;:14;854:27;;836:6;843:7;;;;;;;836:15;;;;;;;;;;;:45;-1:-1:-1;;;;;836:45:178;;;;;;;;-1:-1:-1;904:2:178;896:10;;;;803:115;;;-1:-1:-1;942:6:178;213:744;-1:-1:-1;;;;213:744:178:o;1664:414:174:-;1727:4;1749:21;1759:3;1764:5;1749:9;:21::i;:::-;1744:327;;-1:-1:-1;1787:23:174;;;;;;;;:11;:23;;;;;;;;;;;;;1970:18;;1948:19;;;:12;;;:19;;;;;;:40;;;;2003:11;;1744:327;-1:-1:-1;2054:5:174;2047:12;;6985:151:173;7069:4;7093:35;7103:3;7123;7093:9;:35::i;3417:187:135:-;3551:45;3578:4;3584:2;3588:7;3551:26;:45::i;6975:137:174:-;7045:4;7069:35;7077:3;7097:5;7069:7;:35::i;6668:131::-;6735:4;6759:32;6764:3;6784:5;6759:4;:32::i;6417:176:173:-;6506:4;6530:55;6535:3;6555;-1:-1:-1;;;;;6569:14:173;;6530:4;:55::i;4552:204:174:-;4647:18;;4619:7;;4647:26;-1:-1:-1;4639:73:174;;;;-1:-1:-1;;;4639:73:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4730:3;:11;;4742:5;4730:18;;;;;;;;;;;;;;;;4723:25;;4552:204;;;;:::o;5329:149::-;5402:4;5426:44;5434:3;-1:-1:-1;;;;;5454:14:174;;5426:7;:44::i;6759:142:173:-;6836:4;6860:33;6868:3;6888;6860:7;:33::i;5072:279::-;5176:19;;5139:7;;;;5176:27;-1:-1:-1;5168:74:173;;;;-1:-1:-1;;;5168:74:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5255:22;5280:3;:12;;5293:5;5280:19;;;;;;;;;;;;;;;;;;5255:44;;5318:5;:10;;;5330:5;:12;;;5310:33;;;;;5072:279;;;;;:::o;5774:319::-;5868:7;5907:17;;;:12;;;:17;;;;;;5958:12;5943:13;5935:36;;;;-1:-1:-1;;;5935:36:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6025:3;:12;;6049:1;6038:8;:12;6025:26;;;;;;;;;;;;;;;;;;:33;;;6018:40;;;5774:319;;;;;:::o;3884:129:174:-;3957:4;3981:19;;;:12;;;;;:19;;;;;;:24;;;3884:129::o;15735:604:157:-;15856:4;15883:15;:2;-1:-1:-1;;;;;15883:13:157;;:15::i;:::-;15878:60;;-1:-1:-1;15922:4:157;15915:11;;15878:60;15948:23;15974:252;-1:-1:-1;;;16087:12:157;:10;:12::i;:::-;16114:4;16133:7;16155:5;15990:181;;;;;;-1:-1:-1;;;;;15990:181:157;;;;;;-1:-1:-1;;;;;15990:181:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15990:181:157;;;;;;;-1:-1:-1;;;;;15990:181:157;;;;;;;;;;;15974:252;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15974:15:157;;;:252;:15;:252::i;:::-;15948:278;;16237:13;16264:10;16253:32;;;;;;;;;;;;;;;-1:-1:-1;16253:32:157;-1:-1:-1;;;;;;16304:26:157;-1:-1:-1;;;16304:26:157;;-1:-1:-1;;;15735:604:157;;;;;;:::o;609:241:160:-;719:45;746:4;752:2;756:7;719:26;:45::i;:::-;786:8;:6;:8::i;:::-;785:9;777:65;;;;-1:-1:-1;;;777:65:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:1544:174;2320:4;2459:19;;;:12;;;:19;;;;;;2495:15;;2491:1300;;2930:18;;-1:-1:-1;;2881:14:174;;;;2930:22;;;;2857:21;;2930:3;;:22;;3217;;;;;;;;;;;;;;3197:42;;3363:9;3334:3;:11;;3346:13;3334:26;;;;;;;;;;;;;;;;;;;:38;;;;3440:23;;;3482:1;3440:12;;;:23;;;;;;3466:17;;;3440:43;;3592:17;;3440:3;;3592:17;;;;;;;;;;;;;;;;;;;;;;3687:3;:12;;:19;3700:5;3687:19;;;;;;;;;;;3680:26;;;3730:4;3723:11;;;;;;;;2491:1300;3774:5;3767:12;;;;;1887:692:173;1963:4;2098:17;;;:12;;;:17;;;;;;2132:13;2128:444;;-1:-1:-1;;2217:38:173;;;;;;;;;;;;;;;;;;2199:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2414:19;;2394:17;;;:12;;;:17;;;;;;;:39;2448:11;;2128:444;2528:5;2492:3;:12;;2516:1;2505:8;:12;2492:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2555:5;2548:12;;;;;2754:1549;2818:4;2953:17;;;:12;;;:17;;;;;;2987:13;;2983:1313;;3419:19;;-1:-1:-1;;3372:12:173;;;;3419:23;;;;3348:21;;3419:3;;:23;;3716;;;;;;;;;;;;;;;;3687:52;;3864:9;3834:3;:12;;3847:13;3834:27;;;;;;;;;;;;;;;;:39;;:27;;;;;:39;;;;;;;;;;;;;;;3954:14;;3941:28;;:12;;;:28;;;;;3972:17;;;3941:48;;4098:18;;3941:3;;4098:18;;;;;;;;;;;;;;-1:-1:-1;;4098:18:173;;;;;;;;;;;;;;;;;;;;;4194:17;;;:12;;;:17;;;;;;4187:24;;;;4098:18;-1:-1:-1;4228:11:173;;-1:-1:-1;;;;4228:11:173;743:422:169;1110:20;1149:8;;;743:422::o;3661:196::-;3764:12;3796:53;3819:6;3827:4;3833:1;3836:12;5168;5201:18;5212:6;5201:10;:18::i;:::-;5193:60;;;;;-1:-1:-1;;;5193:60:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:12;5341:23;5368:6;-1:-1:-1;;;;;5368:11:169;5388:8;5399:4;5368:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5368:36:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5326:78;;;;5419:7;5415:595;;;5450:10;-1:-1:-1;5443:17:169;;-1:-1:-1;5443:17:169;5415:595;5564:17;;:21;5560:439;;5827:10;5821:17;5888:15;5875:10;5871:2;5867:19;5860:44;5775:148;5963:20;;-1:-1:-1;;;5963:20:169;;;;;;;;;;;;;;;;;5970:12;;5963:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\nimport \"../access/AccessControl.sol\";\r\nimport \"../GSN/Context.sol\";\r\nimport \"../utils/Counters.sol\";\r\nimport \"../token/ERC721/ERC721.sol\";\r\nimport \"../token/ERC721/ERC721Burnable.sol\";\r\nimport \"../token/ERC721/ERC721Pausable.sol\";\r\n\r\n/**\r\n * @dev {ERC721} token, including:\r\n *\r\n *  - ability for holders to burn (destroy) their tokens\r\n *  - a minter role that allows for token minting (creation)\r\n *  - a pauser role that allows to stop all token transfers\r\n *  - token ID and URI autogeneration\r\n *\r\n * This contract uses {AccessControl} to lock permissioned functions using the\r\n * different roles - head to its documentation for details.\r\n *\r\n * The account that deploys the contract will be granted the minter and pauser\r\n * roles, as well as the default admin role, which will let it grant both minter\r\n * and pauser roles to other accounts.\r\n */\r\ncontract ERC721PresetMinterPauserAutoId is Context, AccessControl, ERC721Burnable, ERC721Pausable {\r\n    using Counters for Counters.Counter;\r\n\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n\r\n    Counters.Counter private _tokenIdTracker;\r\n\r\n    /**\r\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\r\n     * account that deploys the contract.\r\n     *\r\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\r\n     * See {ERC721-tokenURI}.\r\n     */\r\n    constructor(string memory name, string memory symbol, string memory baseURI) public ERC721(name, symbol) {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n\r\n        _setupRole(MINTER_ROLE, _msgSender());\r\n        _setupRole(PAUSER_ROLE, _msgSender());\r\n\r\n        _setBaseURI(baseURI);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a new token for `to`. Its token ID will be automatically\r\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\r\n     * URI autogenerated based on the base URI passed at construction.\r\n     *\r\n     * See {ERC721-_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `MINTER_ROLE`.\r\n     */\r\n    function mint(address to) public virtual {\r\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have minter role to mint\");\r\n\r\n        // We cannot just use balanceOf to create the new tokenId because tokens\r\n        // can be burned (destroyed), so we need a separate counter.\r\n        _mint(to, _tokenIdTracker.current());\r\n        _tokenIdTracker.increment();\r\n    }\r\n\r\n    /**\r\n     * @dev Pauses all token transfers.\r\n     *\r\n     * See {ERC721Pausable} and {Pausable-_pause}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `PAUSER_ROLE`.\r\n     */\r\n    function pause() public virtual {\r\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\");\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev Unpauses all token transfers.\r\n     *\r\n     * See {ERC721Pausable} and {Pausable-_unpause}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `PAUSER_ROLE`.\r\n     */\r\n    function unpause() public virtual {\r\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\");\r\n        _unpause();\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override(ERC721, ERC721Pausable) {\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\drake\\onedrive\\documents\\dev\\pruf\\PRUF_TRUFFLE\\contracts\\imports\\presets\\ERC721PresetMinterPauserAutoId.sol",
  "ast": {
    "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/presets/ERC721PresetMinterPauserAutoId.sol",
    "exportedSymbols": {
      "ERC721PresetMinterPauserAutoId": [
        24568
      ]
    },
    "id": 24569,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24417,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:135"
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/access/AccessControl.sol",
        "file": "../access/AccessControl.sol",
        "id": 24418,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 18196,
        "src": "62:37:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/GSN/Context.sol",
        "file": "../GSN/Context.sol",
        "id": 24419,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 16751,
        "src": "101:28:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/utils/Counters.sol",
        "file": "../utils/Counters.sol",
        "id": 24420,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 30772,
        "src": "131:31:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721.sol",
        "file": "../token/ERC721/ERC721.sol",
        "id": 24421,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 28857,
        "src": "164:36:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721Burnable.sol",
        "file": "../token/ERC721/ERC721Burnable.sol",
        "id": 24422,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 28887,
        "src": "202:44:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721Pausable.sol",
        "file": "../token/ERC721/ERC721Pausable.sol",
        "id": 24423,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 28951,
        "src": "248:44:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24425,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16750,
              "src": "960:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$16750",
                "typeString": "contract Context"
              }
            },
            "id": 24426,
            "nodeType": "InheritanceSpecifier",
            "src": "960:7:135"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24427,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18195,
              "src": "969:13:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$18195",
                "typeString": "contract AccessControl"
              }
            },
            "id": 24428,
            "nodeType": "InheritanceSpecifier",
            "src": "969:13:135"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24429,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28886,
              "src": "984:14:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$28886",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 24430,
            "nodeType": "InheritanceSpecifier",
            "src": "984:14:135"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24431,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28950,
              "src": "1000:14:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$28950",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 24432,
            "nodeType": "InheritanceSpecifier",
            "src": "1000:14:135"
          }
        ],
        "contractDependencies": [
          16750,
          18195,
          18530,
          18776,
          28856,
          28886,
          28950,
          29066,
          29097,
          29124,
          31819
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 24424,
          "nodeType": "StructuredDocumentation",
          "src": "296:619:135",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 24568,
        "linearizedBaseContracts": [
          24568,
          28950,
          31819,
          28886,
          28856,
          29097,
          29124,
          29066,
          18530,
          18776,
          18195,
          16750
        ],
        "name": "ERC721PresetMinterPauserAutoId",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 24435,
            "libraryName": {
              "contractScope": null,
              "id": 24433,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30771,
              "src": "1028:8:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$30771",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1022:36:135",
            "typeName": {
              "contractScope": null,
              "id": 24434,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30731,
              "src": "1041:16:135",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$30731_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 24440,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 24568,
            "src": "1066:62:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24436,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1066:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 24438,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1114:13:135",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 24437,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1104:9:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 24439,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1104:24:135",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 24445,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 24568,
            "src": "1135:62:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24441,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1135:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 24443,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1183:13:135",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 24442,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1173:9:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 24444,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1173:24:135",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24447,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 24568,
            "src": "1206:40:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$30731_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 24446,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30731,
              "src": "1206:16:135",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$30731_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 24483,
              "nodeType": "Block",
              "src": "1622:194:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24462,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17938,
                        "src": "1644:18:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24463,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16738,
                          "src": "1664:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 24464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1664:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24461,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18121,
                      "src": "1633:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 24465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:44:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24466,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:44:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24468,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24440,
                        "src": "1701:11:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24469,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16738,
                          "src": "1714:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 24470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1714:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24467,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18121,
                      "src": "1690:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 24471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:37:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24472,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:37:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24474,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24445,
                        "src": "1749:11:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24475,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16738,
                          "src": "1762:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 24476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1762:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24473,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18121,
                      "src": "1738:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 24477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:37:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24478,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:37:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24480,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24454,
                        "src": "1800:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 24479,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28764,
                      "src": "1788:11:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 24481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:20:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24482,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:20:135"
                }
              ]
            },
            "documentation": {
              "id": 24448,
              "nodeType": "StructuredDocumentation",
              "src": "1255:256:135",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 24484,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24457,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24450,
                    "src": "1608:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24458,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24452,
                    "src": "1614:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 24459,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24456,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28856,
                  "src": "1601:6:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$28856_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1601:20:135"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24450,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24484,
                  "src": "1529:18:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24449,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24452,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24484,
                  "src": "1549:20:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24454,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24484,
                  "src": "1571:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24453,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1528:65:135"
            },
            "returnParameters": {
              "id": 24460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1622:0:135"
            },
            "scope": 24568,
            "src": "1517:299:135",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24511,
              "nodeType": "Block",
              "src": "2245:366:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24492,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24440,
                            "src": "2272:11:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24493,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16738,
                              "src": "2285:10:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2285:12:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 24491,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17984,
                          "src": "2264:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 24495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2264:34:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 24496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2300:63:135",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 24490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2256:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:108:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24498,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:108:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24500,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24487,
                        "src": "2535:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 24501,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24447,
                            "src": "2539:15:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$30731_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 24502,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30742,
                          "src": "2539:23:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$30731_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$30731_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 24503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:25:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24499,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28592,
                      "src": "2529:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2529:36:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24505,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:36:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24506,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24447,
                        "src": "2576:15:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$30731_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 24508,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30754,
                      "src": "2576:25:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$30731_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$30731_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 24509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:27:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24510,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:27:135"
                }
              ]
            },
            "documentation": {
              "id": 24485,
              "nodeType": "StructuredDocumentation",
              "src": "1824:374:135",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 24512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24487,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24512,
                  "src": "2218:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2217:12:135"
            },
            "returnParameters": {
              "id": 24489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2245:0:135"
            },
            "scope": 24568,
            "src": "2204:407:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24528,
              "nodeType": "Block",
              "src": "2858:147:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24518,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24445,
                            "src": "2885:11:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24519,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16738,
                              "src": "2898:10:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2898:12:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 24517,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17984,
                          "src": "2877:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 24521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2877:34:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 24522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2913:64:135",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 24516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2869:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:109:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24524,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:109:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24525,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31802,
                      "src": "2989:6:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 24526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:8:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24527,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:8:135"
                }
              ]
            },
            "documentation": {
              "id": 24513,
              "nodeType": "StructuredDocumentation",
              "src": "2619:201:135",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 24529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2840:2:135"
            },
            "returnParameters": {
              "id": 24515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2858:0:135"
            },
            "scope": 24568,
            "src": "2826:179:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24545,
              "nodeType": "Block",
              "src": "3258:151:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24535,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24445,
                            "src": "3285:11:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24536,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16738,
                              "src": "3298:10:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3298:12:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 24534,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17984,
                          "src": "3277:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 24538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3277:34:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 24539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3313:66:135",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 24533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3269:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:111:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24541,
                  "nodeType": "ExpressionStatement",
                  "src": "3269:111:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24542,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31818,
                      "src": "3391:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 24543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:10:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24544,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:10:135"
                }
              ]
            },
            "documentation": {
              "id": 24530,
              "nodeType": "StructuredDocumentation",
              "src": "3013:205:135",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 24546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:2:135"
            },
            "returnParameters": {
              "id": 24532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3258:0:135"
            },
            "scope": 24568,
            "src": "3224:185:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28855,
              28949
            ],
            "body": {
              "id": 24566,
              "nodeType": "Block",
              "src": "3540:64:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24561,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24548,
                        "src": "3578:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24562,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24550,
                        "src": "3584:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24563,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24552,
                        "src": "3588:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24558,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3551:5:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PresetMinterPauserAutoId_$24568",
                          "typeString": "contract super ERC721PresetMinterPauserAutoId"
                        }
                      },
                      "id": 24560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28949,
                      "src": "3551:26:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:45:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24565,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:45:135"
                }
              ]
            },
            "documentation": null,
            "id": 24567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24556,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 24554,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 28856,
                  "src": "3516:6:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$28856",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "contractScope": null,
                  "id": 24555,
                  "name": "ERC721Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 28950,
                  "src": "3524:14:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Pausable_$28950",
                    "typeString": "contract ERC721Pausable"
                  }
                }
              ],
              "src": "3507:32:135"
            },
            "parameters": {
              "id": 24553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24548,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24567,
                  "src": "3447:12:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24550,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24567,
                  "src": "3461:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24552,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24567,
                  "src": "3473:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3473:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3446:43:135"
            },
            "returnParameters": {
              "id": 24557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3540:0:135"
            },
            "scope": 24568,
            "src": "3417:187:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 24569,
        "src": "917:2690:135"
      }
    ],
    "src": "35:3574:135"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/presets/ERC721PresetMinterPauserAutoId.sol",
    "exportedSymbols": {
      "ERC721PresetMinterPauserAutoId": [
        24568
      ]
    },
    "id": 24569,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24417,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:135"
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/access/AccessControl.sol",
        "file": "../access/AccessControl.sol",
        "id": 24418,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 18196,
        "src": "62:37:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/GSN/Context.sol",
        "file": "../GSN/Context.sol",
        "id": 24419,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 16751,
        "src": "101:28:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/utils/Counters.sol",
        "file": "../utils/Counters.sol",
        "id": 24420,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 30772,
        "src": "131:31:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721.sol",
        "file": "../token/ERC721/ERC721.sol",
        "id": 24421,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 28857,
        "src": "164:36:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721Burnable.sol",
        "file": "../token/ERC721/ERC721Burnable.sol",
        "id": 24422,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 28887,
        "src": "202:44:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/drake/onedrive/documents/dev/pruf/PRUF_TRUFFLE/contracts/imports/token/ERC721/ERC721Pausable.sol",
        "file": "../token/ERC721/ERC721Pausable.sol",
        "id": 24423,
        "nodeType": "ImportDirective",
        "scope": 24569,
        "sourceUnit": 28951,
        "src": "248:44:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24425,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16750,
              "src": "960:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$16750",
                "typeString": "contract Context"
              }
            },
            "id": 24426,
            "nodeType": "InheritanceSpecifier",
            "src": "960:7:135"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24427,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18195,
              "src": "969:13:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$18195",
                "typeString": "contract AccessControl"
              }
            },
            "id": 24428,
            "nodeType": "InheritanceSpecifier",
            "src": "969:13:135"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24429,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28886,
              "src": "984:14:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$28886",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 24430,
            "nodeType": "InheritanceSpecifier",
            "src": "984:14:135"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24431,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28950,
              "src": "1000:14:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$28950",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 24432,
            "nodeType": "InheritanceSpecifier",
            "src": "1000:14:135"
          }
        ],
        "contractDependencies": [
          16750,
          18195,
          18530,
          18776,
          28856,
          28886,
          28950,
          29066,
          29097,
          29124,
          31819
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 24424,
          "nodeType": "StructuredDocumentation",
          "src": "296:619:135",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 24568,
        "linearizedBaseContracts": [
          24568,
          28950,
          31819,
          28886,
          28856,
          29097,
          29124,
          29066,
          18530,
          18776,
          18195,
          16750
        ],
        "name": "ERC721PresetMinterPauserAutoId",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 24435,
            "libraryName": {
              "contractScope": null,
              "id": 24433,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30771,
              "src": "1028:8:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$30771",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1022:36:135",
            "typeName": {
              "contractScope": null,
              "id": 24434,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30731,
              "src": "1041:16:135",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$30731_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 24440,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 24568,
            "src": "1066:62:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24436,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1066:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 24438,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1114:13:135",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 24437,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1104:9:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 24439,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1104:24:135",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 24445,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 24568,
            "src": "1135:62:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24441,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1135:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 24443,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1183:13:135",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 24442,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1173:9:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 24444,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1173:24:135",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24447,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 24568,
            "src": "1206:40:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$30731_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 24446,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30731,
              "src": "1206:16:135",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$30731_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 24483,
              "nodeType": "Block",
              "src": "1622:194:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24462,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17938,
                        "src": "1644:18:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24463,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16738,
                          "src": "1664:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 24464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1664:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24461,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18121,
                      "src": "1633:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 24465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:44:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24466,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:44:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24468,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24440,
                        "src": "1701:11:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24469,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16738,
                          "src": "1714:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 24470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1714:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24467,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18121,
                      "src": "1690:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 24471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:37:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24472,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:37:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24474,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24445,
                        "src": "1749:11:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24475,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16738,
                          "src": "1762:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 24476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1762:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24473,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18121,
                      "src": "1738:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 24477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:37:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24478,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:37:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24480,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24454,
                        "src": "1800:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 24479,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28764,
                      "src": "1788:11:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 24481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:20:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24482,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:20:135"
                }
              ]
            },
            "documentation": {
              "id": 24448,
              "nodeType": "StructuredDocumentation",
              "src": "1255:256:135",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 24484,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24457,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24450,
                    "src": "1608:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24458,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24452,
                    "src": "1614:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 24459,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24456,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28856,
                  "src": "1601:6:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$28856_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1601:20:135"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24450,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24484,
                  "src": "1529:18:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24449,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24452,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24484,
                  "src": "1549:20:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24454,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24484,
                  "src": "1571:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24453,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1528:65:135"
            },
            "returnParameters": {
              "id": 24460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1622:0:135"
            },
            "scope": 24568,
            "src": "1517:299:135",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24511,
              "nodeType": "Block",
              "src": "2245:366:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24492,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24440,
                            "src": "2272:11:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24493,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16738,
                              "src": "2285:10:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2285:12:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 24491,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17984,
                          "src": "2264:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 24495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2264:34:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 24496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2300:63:135",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 24490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2256:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:108:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24498,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:108:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24500,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24487,
                        "src": "2535:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 24501,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24447,
                            "src": "2539:15:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$30731_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 24502,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30742,
                          "src": "2539:23:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$30731_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$30731_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 24503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:25:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24499,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28592,
                      "src": "2529:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2529:36:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24505,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:36:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24506,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24447,
                        "src": "2576:15:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$30731_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 24508,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30754,
                      "src": "2576:25:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$30731_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$30731_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 24509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:27:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24510,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:27:135"
                }
              ]
            },
            "documentation": {
              "id": 24485,
              "nodeType": "StructuredDocumentation",
              "src": "1824:374:135",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 24512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24487,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24512,
                  "src": "2218:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2217:12:135"
            },
            "returnParameters": {
              "id": 24489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2245:0:135"
            },
            "scope": 24568,
            "src": "2204:407:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24528,
              "nodeType": "Block",
              "src": "2858:147:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24518,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24445,
                            "src": "2885:11:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24519,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16738,
                              "src": "2898:10:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2898:12:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 24517,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17984,
                          "src": "2877:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 24521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2877:34:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 24522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2913:64:135",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 24516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2869:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:109:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24524,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:109:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24525,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31802,
                      "src": "2989:6:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 24526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:8:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24527,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:8:135"
                }
              ]
            },
            "documentation": {
              "id": 24513,
              "nodeType": "StructuredDocumentation",
              "src": "2619:201:135",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 24529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2840:2:135"
            },
            "returnParameters": {
              "id": 24515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2858:0:135"
            },
            "scope": 24568,
            "src": "2826:179:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24545,
              "nodeType": "Block",
              "src": "3258:151:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24535,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24445,
                            "src": "3285:11:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24536,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16738,
                              "src": "3298:10:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3298:12:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 24534,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17984,
                          "src": "3277:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 24538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3277:34:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 24539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3313:66:135",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 24533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3269:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:111:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24541,
                  "nodeType": "ExpressionStatement",
                  "src": "3269:111:135"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24542,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31818,
                      "src": "3391:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 24543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:10:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24544,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:10:135"
                }
              ]
            },
            "documentation": {
              "id": 24530,
              "nodeType": "StructuredDocumentation",
              "src": "3013:205:135",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 24546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:2:135"
            },
            "returnParameters": {
              "id": 24532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3258:0:135"
            },
            "scope": 24568,
            "src": "3224:185:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28855,
              28949
            ],
            "body": {
              "id": 24566,
              "nodeType": "Block",
              "src": "3540:64:135",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24561,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24548,
                        "src": "3578:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24562,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24550,
                        "src": "3584:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24563,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24552,
                        "src": "3588:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24558,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3551:5:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PresetMinterPauserAutoId_$24568",
                          "typeString": "contract super ERC721PresetMinterPauserAutoId"
                        }
                      },
                      "id": 24560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28949,
                      "src": "3551:26:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:45:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24565,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:45:135"
                }
              ]
            },
            "documentation": null,
            "id": 24567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24556,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 24554,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 28856,
                  "src": "3516:6:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$28856",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "contractScope": null,
                  "id": 24555,
                  "name": "ERC721Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 28950,
                  "src": "3524:14:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Pausable_$28950",
                    "typeString": "contract ERC721Pausable"
                  }
                }
              ],
              "src": "3507:32:135"
            },
            "parameters": {
              "id": 24553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24548,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24567,
                  "src": "3447:12:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24550,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24567,
                  "src": "3461:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24552,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24567,
                  "src": "3473:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3473:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3446:43:135"
            },
            "returnParameters": {
              "id": 24557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3540:0:135"
            },
            "scope": 24568,
            "src": "3417:187:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 24569,
        "src": "917:2690:135"
      }
    ],
    "src": "35:3574:135"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-09-16T15:05:08.385Z",
  "devdoc": {
    "details": "{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(address)": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}