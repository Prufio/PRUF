{
  "contractName": "RefundEscrow",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "beneficiary_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RefundsClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RefundsEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum RefundEscrow.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableRefunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiaryWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"beneficiary_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RefundsClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RefundsEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiaryWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum RefundEscrow.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Escrow that holds funds for a beneficiary, deposited from multiple parties.Intended usage: See {Escrow}. Same usage guidelines apply here.The owner account (that is, the contract that instantiates this contract) may deposit, close the deposit period, and allow for either withdrawal by the beneficiary, or refunds to the depositors. All interactions with `RefundEscrow` will be made through the owner contract.\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"returns\":{\"_0\":\"The beneficiary of the escrow.\"}},\"beneficiaryWithdraw()\":{\"details\":\"Withdraws the beneficiary's funds.\"},\"close()\":{\"details\":\"Allows for the beneficiary to withdraw their funds, rejecting further deposits.\"},\"constructor\":{\"details\":\"Constructor.\",\"params\":{\"beneficiary_\":\"The beneficiary of the deposits.\"}},\"deposit(address)\":{\"details\":\"Stores funds that may later be refunded.\",\"params\":{\"refundee\":\"The address funds will be sent to if a refund occurs.\"}},\"enableRefunds()\":{\"details\":\"Allows for refunds to take place, rejecting further deposits.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"state()\":{\"returns\":{\"_0\":\"The current state of the escrow.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to.\"}},\"withdrawalAllowed(address)\":{\"details\":\"Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a 'payee' argument, but we ignore it here since the condition is global, not per-payee.\"}},\"title\":\"RefundEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/RefundEscrow.sol\":\"RefundEscrow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x0bf0f9c9bfdea4be5d7dc3f1fccf177de0a5e7da51f96bfe5923af8ad1961a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475920b50f6082a8d87a140cc5528bfc98c1f3efb8e2c367f93a1e482cea24a6\",\"dweb:/ipfs/QmVEUrKPdy3vgPjjzsikKLETUBFRo6uKbrgn2zeaJt7Mcu\"]},\"/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/Escrow.sol\":{\"keccak256\":\"0xca58fcb35722c1f93768ebb9069701896c9866b85b2a3fa4cb38bb01d25b3296\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde7eca5dae929af8dd50fdbf7f77d5c573bca1fc06c0fb841efa414871229da\",\"dweb:/ipfs/QmXT1DGiKaAvtUh3xDH9uaRpbWLAMoUGrK9cT5XEoYGtY8\"]},\"/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/RefundEscrow.sol\":{\"keccak256\":\"0x69b19edfbfb3f57f30ee843b23261c6d0ef7c2ba2d782b20daa8c42a99f90948\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2159c00c985ea9769a49dec2bde39397e017b90304c62e411bc5f41e6151eef\",\"dweb:/ipfs/QmRSRunyKEAQeZbeyVGc7dp1EcqMAqy5xyokte8BR3z1FE\"]},\"/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d35380380610d3583398101604081905261002f916100e6565b60006100396100e2565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0381166100b25760405162461bcd60e51b81526004016100a990610114565b60405180910390fd5b6002805460ff196001600160a01b039390931661010002610100600160a81b031990911617919091169055610161565b3390565b6000602082840312156100f7578081fd5b81516001600160a01b038116811461010d578182fd5b9392505050565b6020808252602d908201527f526566756e64457363726f773a2062656e65666963696172792069732074686560408201526c207a65726f206164647265737360981b606082015260800190565b610bc5806101706000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101655780639af6549a1461017a578063c19d93fb1461018f578063e3a9db1a146101b1578063f2fde38b146101de578063f340fa01146101fe576100a7565b806338af3eed146100ac57806343d726d6146100d757806351cff8d9146100ee578063685ca1941461010e578063715018a61461013b5780638c52dc4114610150575b600080fd5b3480156100b857600080fd5b506100c1610211565b6040516100ce9190610861565b60405180910390f35b3480156100e357600080fd5b506100ec610225565b005b3480156100fa57600080fd5b506100ec61010936600461083b565b6102ea565b34801561011a57600080fd5b5061012e61012936600461083b565b61031b565b6040516100ce9190610875565b34801561014757600080fd5b506100ec61034d565b34801561015c57600080fd5b506100ec6103d6565b34801561017157600080fd5b506100c1610493565b34801561018657600080fd5b506100ec6104a2565b34801561019b57600080fd5b506101a4610505565b6040516100ce9190610880565b3480156101bd57600080fd5b506101d16101cc36600461083b565b61050e565b6040516100ce9190610b4d565b3480156101ea57600080fd5b506100ec6101f936600461083b565b610529565b6100ec61020c36600461083b565b6105e9565b60025461010090046001600160a01b031690565b61022d610638565b6001600160a01b031661023e610493565b6001600160a01b03161461026d5760405162461bcd60e51b815260040161026490610ac6565b60405180910390fd5b6000610277610505565b600281111561029657634e487b7160e01b600052602160045260246000fd5b146102b35760405162461bcd60e51b815260040161026490610a7d565b6002805460ff1916811790556040517f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f90600090a1565b6102f38161031b565b61030f5760405162461bcd60e51b815260040161026490610a2a565b6103188161063c565b50565b60006001610327610505565b600281111561034657634e487b7160e01b600052602160045260246000fd5b1492915050565b610355610638565b6001600160a01b0316610366610493565b6001600160a01b03161461038c5760405162461bcd60e51b815260040161026490610ac6565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103de610638565b6001600160a01b03166103ef610493565b6001600160a01b0316146104155760405162461bcd60e51b815260040161026490610ac6565b600061041f610505565b600281111561043e57634e487b7160e01b600052602160045260246000fd5b1461045b5760405162461bcd60e51b815260040161026490610afb565b6002805460ff191660011790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b6000546001600160a01b031690565b60026104ac610505565b60028111156104cb57634e487b7160e01b600052602160045260246000fd5b146104e85760405162461bcd60e51b8152600401610264906108a8565b610503476104f4610211565b6001600160a01b0316906106e8565b565b60025460ff1690565b6001600160a01b031660009081526001602052604090205490565b610531610638565b6001600160a01b0316610542610493565b6001600160a01b0316146105685760405162461bcd60e51b815260040161026490610ac6565b6001600160a01b03811661058e5760405162461bcd60e51b815260040161026490610905565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006105f3610505565b600281111561061257634e487b7160e01b600052602160045260246000fd5b1461062f5760405162461bcd60e51b8152600401610264906109df565b61031881610789565b3390565b610644610638565b6001600160a01b0316610655610493565b6001600160a01b03161461067b5760405162461bcd60e51b815260040161026490610ac6565b6001600160a01b03811660008181526001602052604081208054919055906106a390826106e8565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516106dc9190610b4d565b60405180910390a25050565b804710156107085760405162461bcd60e51b8152600401610264906109a8565b6000826001600160a01b0316826040516107219061085e565b60006040518083038185875af1925050503d806000811461075e576040519150601f19603f3d011682016040523d82523d6000602084013e610763565b606091505b50509050806107845760405162461bcd60e51b81526004016102649061094b565b505050565b610791610638565b6001600160a01b03166107a2610493565b6001600160a01b0316146107c85760405162461bcd60e51b815260040161026490610ac6565b6001600160a01b03811660009081526001602052604090205434906107ee908290610b56565b6001600160a01b038316600081815260016020526040908190209290925590517f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906106dc908490610b4d565b60006020828403121561084c578081fd5b813561085781610b7a565b9392505050565b90565b6001600160a01b0391909116815260200190565b901515815260200190565b60208101600383106108a257634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526038908201527f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60408201527f6c79207769746864726177207768696c6520636c6f7365640000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b6020808252602b908201527f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760408201526a68696c652061637469766560a81b606082015260800190565b60208082526033908201527f436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420604082015272616c6c6f77656420746f20776974686472617760681b606082015260800190565b60208082526029908201527f526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696040820152686c652061637469766560b81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560408201527166756e6473207768696c652061637469766560701b606082015260800190565b90815260200190565b60008219821115610b7557634e487b7160e01b81526011600452602481fd5b500190565b6001600160a01b038116811461031857600080fdfea264697066735822122003ea92c0f83e199e3cf00811ee57caa2cf9995dde0a6e7b31d8cfcca831c753264736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101655780639af6549a1461017a578063c19d93fb1461018f578063e3a9db1a146101b1578063f2fde38b146101de578063f340fa01146101fe576100a7565b806338af3eed146100ac57806343d726d6146100d757806351cff8d9146100ee578063685ca1941461010e578063715018a61461013b5780638c52dc4114610150575b600080fd5b3480156100b857600080fd5b506100c1610211565b6040516100ce9190610861565b60405180910390f35b3480156100e357600080fd5b506100ec610225565b005b3480156100fa57600080fd5b506100ec61010936600461083b565b6102ea565b34801561011a57600080fd5b5061012e61012936600461083b565b61031b565b6040516100ce9190610875565b34801561014757600080fd5b506100ec61034d565b34801561015c57600080fd5b506100ec6103d6565b34801561017157600080fd5b506100c1610493565b34801561018657600080fd5b506100ec6104a2565b34801561019b57600080fd5b506101a4610505565b6040516100ce9190610880565b3480156101bd57600080fd5b506101d16101cc36600461083b565b61050e565b6040516100ce9190610b4d565b3480156101ea57600080fd5b506100ec6101f936600461083b565b610529565b6100ec61020c36600461083b565b6105e9565b60025461010090046001600160a01b031690565b61022d610638565b6001600160a01b031661023e610493565b6001600160a01b03161461026d5760405162461bcd60e51b815260040161026490610ac6565b60405180910390fd5b6000610277610505565b600281111561029657634e487b7160e01b600052602160045260246000fd5b146102b35760405162461bcd60e51b815260040161026490610a7d565b6002805460ff1916811790556040517f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f90600090a1565b6102f38161031b565b61030f5760405162461bcd60e51b815260040161026490610a2a565b6103188161063c565b50565b60006001610327610505565b600281111561034657634e487b7160e01b600052602160045260246000fd5b1492915050565b610355610638565b6001600160a01b0316610366610493565b6001600160a01b03161461038c5760405162461bcd60e51b815260040161026490610ac6565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103de610638565b6001600160a01b03166103ef610493565b6001600160a01b0316146104155760405162461bcd60e51b815260040161026490610ac6565b600061041f610505565b600281111561043e57634e487b7160e01b600052602160045260246000fd5b1461045b5760405162461bcd60e51b815260040161026490610afb565b6002805460ff191660011790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b6000546001600160a01b031690565b60026104ac610505565b60028111156104cb57634e487b7160e01b600052602160045260246000fd5b146104e85760405162461bcd60e51b8152600401610264906108a8565b610503476104f4610211565b6001600160a01b0316906106e8565b565b60025460ff1690565b6001600160a01b031660009081526001602052604090205490565b610531610638565b6001600160a01b0316610542610493565b6001600160a01b0316146105685760405162461bcd60e51b815260040161026490610ac6565b6001600160a01b03811661058e5760405162461bcd60e51b815260040161026490610905565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006105f3610505565b600281111561061257634e487b7160e01b600052602160045260246000fd5b1461062f5760405162461bcd60e51b8152600401610264906109df565b61031881610789565b3390565b610644610638565b6001600160a01b0316610655610493565b6001600160a01b03161461067b5760405162461bcd60e51b815260040161026490610ac6565b6001600160a01b03811660008181526001602052604081208054919055906106a390826106e8565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516106dc9190610b4d565b60405180910390a25050565b804710156107085760405162461bcd60e51b8152600401610264906109a8565b6000826001600160a01b0316826040516107219061085e565b60006040518083038185875af1925050503d806000811461075e576040519150601f19603f3d011682016040523d82523d6000602084013e610763565b606091505b50509050806107845760405162461bcd60e51b81526004016102649061094b565b505050565b610791610638565b6001600160a01b03166107a2610493565b6001600160a01b0316146107c85760405162461bcd60e51b815260040161026490610ac6565b6001600160a01b03811660009081526001602052604090205434906107ee908290610b56565b6001600160a01b038316600081815260016020526040908190209290925590517f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906106dc908490610b4d565b60006020828403121561084c578081fd5b813561085781610b7a565b9392505050565b90565b6001600160a01b0391909116815260200190565b901515815260200190565b60208101600383106108a257634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526038908201527f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60408201527f6c79207769746864726177207768696c6520636c6f7365640000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b6020808252602b908201527f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760408201526a68696c652061637469766560a81b606082015260800190565b60208082526033908201527f436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420604082015272616c6c6f77656420746f20776974686472617760681b606082015260800190565b60208082526029908201527f526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696040820152686c652061637469766560b81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560408201527166756e6473207768696c652061637469766560701b606082015260800190565b90815260200190565b60008219821115610b7557634e487b7160e01b81526011600452602481fd5b500190565b6001600160a01b038116811461031857600080fdfea264697066735822122003ea92c0f83e199e3cf00811ee57caa2cf9995dde0a6e7b31d8cfcca831c753264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:748:78",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:78",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "103:229:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "149:26:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:78"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "166:6:78"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "151:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "151:22:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "151:22:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "124:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "133:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "120:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "145:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "116:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:78"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "184:29:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "203:9:78"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "197:5:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "197:16:78"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "188:5:78",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "276:26:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:78"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "293:6:78"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "278:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "278:22:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "278:22:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "235:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "246:5:78"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "261:3:78",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "266:1:78",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "257:3:78"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "257:11:78"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "270:1:78",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:3:78"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "253:19:78"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "242:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "242:31:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "232:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "232:42:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:50:78"
                  },
                  "nodeType": "YulIf",
                  "src": "222:2:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "311:15:78",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "321:5:78"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "311:6:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "69:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "80:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "92:6:78",
                "type": ""
              }
            ],
            "src": "14:318:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:235:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "528:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "539:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "521:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "562:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "573:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "558:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "578:2:78",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "551:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "551:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "601:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "612:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "597:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "597:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "617:34:78",
                        "type": "",
                        "value": "RefundEscrow: beneficiary is the"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "590:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "590:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "590:62:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "672:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:78",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "668:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "668:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "688:15:78",
                        "type": "",
                        "value": " zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "661:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:43:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "661:43:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "713:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "725:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "736:3:78",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "721:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:19:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "713:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "488:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "502:4:78",
                "type": ""
              }
            ],
            "src": "337:409:78"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"RefundEscrow: beneficiary is the\")\n        mstore(add(headStart, 96), \" zero address\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 78,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5917:78",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:78",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:78"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:78"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:78"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:78"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:78"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:78",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:78",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:78"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:78",
                "type": ""
              }
            ],
            "src": "14:259:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "356:189:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "402:26:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "411:6:78"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "419:6:78"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "404:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "404:22:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "404:22:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "377:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "386:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "373:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "373:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "398:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "369:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "366:2:78"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "437:36:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "463:9:78"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "450:12:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "450:23:78"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "441:5:78",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "509:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "482:26:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "482:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "482:33:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "524:15:78",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "534:5:78"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "524:6:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "322:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "333:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "345:6:78",
                "type": ""
              }
            ],
            "src": "278:267:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:14:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "743:10:78",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "750:3:78"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "743:3:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "725:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "733:3:78",
                "type": ""
              }
            ],
            "src": "550:205:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "861:102:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "871:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "883:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "894:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "879:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "871:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "913:9:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "928:6:78"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "944:3:78",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "949:1:78",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "940:3:78"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "940:11:78"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "953:1:78",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "936:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "936:19:78"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:32:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "906:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "906:51:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "906:51:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "830:9:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "841:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "852:4:78",
                "type": ""
              }
            ],
            "src": "760:203:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1085:102:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1095:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1107:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1118:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1103:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1095:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1137:9:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1152:6:78"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1168:3:78",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1173:1:78",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1164:3:78"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1164:11:78"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1177:1:78",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1160:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1160:19:78"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1148:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1148:32:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:51:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1130:51:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1054:9:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1065:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1076:4:78",
                "type": ""
              }
            ],
            "src": "968:219:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1287:92:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1297:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1309:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1320:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1305:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1305:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1297:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1339:9:78"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1364:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1357:6:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1357:14:78"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1350:6:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1350:22:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1332:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:41:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1332:41:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1256:9:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1267:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1278:4:78",
                "type": ""
              }
            ],
            "src": "1192:187:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1493:229:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1503:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1515:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1526:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1511:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1503:4:78"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1571:111:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1592:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1599:3:78",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1604:10:78",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1595:3:78"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1595:20:78"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1585:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1585:31:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1585:31:78"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1636:1:78",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1639:4:78",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1629:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1629:15:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1629:15:78"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1664:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1667:4:78",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1657:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1657:15:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1657:15:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1551:6:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1559:1:78",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1548:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:13:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1541:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:21:78"
                  },
                  "nodeType": "YulIf",
                  "src": "1538:2:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1698:9:78"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1709:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1691:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:25:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1691:25:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$2906__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1462:9:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1473:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1484:4:78",
                "type": ""
              }
            ],
            "src": "1384:338:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1901:246:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1918:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1929:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1911:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1911:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1952:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1963:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1948:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1948:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1968:2:78",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1941:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1941:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1941:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1991:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2002:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1987:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1987:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2007:34:78",
                        "type": "",
                        "value": "RefundEscrow: beneficiary can on"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1980:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1980:62:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2062:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2073:2:78",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2058:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2058:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2078:26:78",
                        "type": "",
                        "value": "ly withdraw while closed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2051:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:54:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2051:54:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2114:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2126:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2137:3:78",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2122:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2122:19:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2114:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1878:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1892:4:78",
                "type": ""
              }
            ],
            "src": "1727:420:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2326:228:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2343:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2354:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2336:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2336:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2336:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2377:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2388:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2373:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2373:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2393:2:78",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2416:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2427:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2412:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2412:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2432:34:78",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2405:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2405:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2405:62:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2487:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2498:2:78",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2483:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2483:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2503:8:78",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2476:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2476:36:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2476:36:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2521:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2533:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2544:3:78",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2529:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2529:19:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2521:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2303:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2317:4:78",
                "type": ""
              }
            ],
            "src": "2152:402:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2733:248:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2750:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2761:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2743:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2743:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2784:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2795:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2780:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2780:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2800:2:78",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2773:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2773:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2823:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2834:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2819:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2819:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2839:34:78",
                        "type": "",
                        "value": "Address: unable to send value, r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2812:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2812:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2812:62:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2894:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2905:2:78",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2890:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2890:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2910:28:78",
                        "type": "",
                        "value": "ecipient may have reverted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2883:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2883:56:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2883:56:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2948:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2960:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2971:3:78",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2956:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2956:19:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2948:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2710:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2724:4:78",
                "type": ""
              }
            ],
            "src": "2559:422:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3160:179:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3177:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3188:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3170:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3170:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3170:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3211:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3222:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3207:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3207:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:2:78",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3200:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3200:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3250:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3261:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3246:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3246:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3266:31:78",
                        "type": "",
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3239:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3239:59:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3239:59:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3307:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3319:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3330:2:78",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3315:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3315:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3307:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3137:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3151:4:78",
                "type": ""
              }
            ],
            "src": "2986:353:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3518:233:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3535:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3546:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3528:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3528:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3528:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3569:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3580:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3565:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3565:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3585:2:78",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3558:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3558:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3608:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3619:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3604:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3604:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3624:34:78",
                        "type": "",
                        "value": "RefundEscrow: can only deposit w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3597:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3597:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3597:62:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3679:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3690:2:78",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3675:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3675:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3695:13:78",
                        "type": "",
                        "value": "hile active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3668:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3668:41:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3668:41:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3718:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3730:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3741:3:78",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3726:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3726:19:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3718:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3495:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3509:4:78",
                "type": ""
              }
            ],
            "src": "3344:407:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3930:241:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3947:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3958:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3940:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3940:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3940:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3981:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3992:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3977:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3977:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3997:2:78",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3970:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3970:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3970:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4020:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4031:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4016:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4016:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4036:34:78",
                        "type": "",
                        "value": "ConditionalEscrow: payee is not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4009:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4009:62:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4091:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4102:2:78",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4087:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4087:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4107:21:78",
                        "type": "",
                        "value": "allowed to withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4080:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4080:49:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4080:49:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4138:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4150:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4161:3:78",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4146:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4146:19:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4138:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3907:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3921:4:78",
                "type": ""
              }
            ],
            "src": "3756:415:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4350:231:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4367:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4378:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4360:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4360:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4360:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4401:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4412:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4397:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4397:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4417:2:78",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4390:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4390:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4390:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4440:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4451:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4436:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4436:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4456:34:78",
                        "type": "",
                        "value": "RefundEscrow: can only close whi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4429:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4429:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4429:62:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4511:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4522:2:78",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4507:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4507:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4527:11:78",
                        "type": "",
                        "value": "le active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4500:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:39:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4500:39:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4548:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4560:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4571:3:78",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4556:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4556:19:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4548:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4327:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4341:4:78",
                "type": ""
              }
            ],
            "src": "4176:405:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4760:182:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4777:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4788:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4770:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4770:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4770:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4811:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4822:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4807:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4807:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4827:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4800:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4800:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4800:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4850:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4861:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4846:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4846:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4866:34:78",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4839:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4839:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4839:62:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4910:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4922:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4933:2:78",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4918:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4910:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4737:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4751:4:78",
                "type": ""
              }
            ],
            "src": "4586:356:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5121:240:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5138:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5149:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5131:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5131:21:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5131:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5172:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5183:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5168:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5168:18:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5188:2:78",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5161:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5161:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5161:30:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5211:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5222:2:78",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5207:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5207:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5227:34:78",
                        "type": "",
                        "value": "RefundEscrow: can only enable re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5200:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5200:62:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5200:62:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5282:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5293:2:78",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5278:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5278:18:78"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5298:20:78",
                        "type": "",
                        "value": "funds while active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5271:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5271:48:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5271:48:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5328:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5340:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5351:3:78",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5336:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5336:19:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5328:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5098:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5112:4:78",
                "type": ""
              }
            ],
            "src": "4947:414:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5467:76:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5477:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5489:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5500:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5485:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5485:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5477:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5519:9:78"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5530:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5512:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5512:25:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5512:25:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5436:9:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5447:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5458:4:78",
                "type": ""
              }
            ],
            "src": "5366:177:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5596:181:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5631:115:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "5652:3:78"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5661:3:78",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5666:10:78",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5657:3:78"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5657:20:78"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5645:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5645:33:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5645:33:78"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5698:1:78",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5701:4:78",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5691:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5691:15:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5691:15:78"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "5726:3:78"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5731:4:78",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5719:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5719:17:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5719:17:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5612:1:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5619:1:78"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5615:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5615:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5609:2:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5609:13:78"
                  },
                  "nodeType": "YulIf",
                  "src": "5606:2:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5755:16:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5766:1:78"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5769:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5762:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5762:9:78"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5755:3:78"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5579:1:78",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5582:1:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5588:3:78",
                "type": ""
              }
            ],
            "src": "5548:229:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5829:86:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5893:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5902:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5905:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5895:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5895:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5895:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5852:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5863:5:78"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5878:3:78",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5883:1:78",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5874:3:78"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5874:11:78"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5887:1:78",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5870:3:78"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5870:19:78"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5859:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5859:31:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5849:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5849:42:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5842:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5842:50:78"
                  },
                  "nodeType": "YulIf",
                  "src": "5839:2:78"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5818:5:78",
                "type": ""
              }
            ],
            "src": "5782:133:78"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_enum$_State_$2906__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"RefundEscrow: beneficiary can on\")\n        mstore(add(headStart, 96), \"ly withdraw while closed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"RefundEscrow: can only deposit w\")\n        mstore(add(headStart, 96), \"hile active\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"ConditionalEscrow: payee is not \")\n        mstore(add(headStart, 96), \"allowed to withdraw\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"RefundEscrow: can only close whi\")\n        mstore(add(headStart, 96), \"le active\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"RefundEscrow: can only enable re\")\n        mstore(add(headStart, 96), \"funds while active\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 78,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "573:2514:21:-:0;;;934:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:2;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:2;-1:-1:-1;;;;;909:18:2;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:2;942:43;;909:6;;942:43;-1:-1:-1;;;;;;995:26:21;;987:84;;;;-1:-1:-1;;;987:84:21;;;;;;;:::i;:::-;;;;;;;;;1081:12;:27;;-1:-1:-1;;;;;;;1081:27:21;;;;;;-1:-1:-1;;;;;;1081:27:21;;;;1118:21;;;;;;573:2514;;586:96:40;665:10;586:96;:::o;14:318:78:-;;145:2;133:9;124:7;120:23;116:32;113:2;;;166:6;158;151:22;113:2;197:16;;-1:-1:-1;;;;;242:31:78;;232:42;;222:2;;293:6;285;278:22;222:2;321:5;103:229;-1:-1:-1;;;103:229:78:o;337:409::-;539:2;521:21;;;578:2;558:18;;;551:30;617:34;612:2;597:18;;590:62;-1:-1:-1;;;683:2:78;668:18;;661:43;736:3;721:19;;511:235::o;:::-;573:2514:21;;;;;;",
  "deployedSourceMap": "573:2514:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:105;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1941:197;;;;;;;;;;;;;:::i;:::-;;598:201:19;;;;;;;;;;-1:-1:-1;598:201:19;;;;;:::i;:::-;;:::i;2963:122:21:-;;;;;;;;;;-1:-1:-1;2963:122:21;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1700:145:2:-;;;;;;;;;;;;;:::i;2234:218:21:-;;;;;;;;;;;;;:::i;1068:85:2:-;;;;;;;;;;;;;:::i;2521:211:21:-;;;;;;;;;;;;;:::i;1216:83::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1025:105:20:-;;;;;;;;;;-1:-1:-1;1025:105:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1994:240:2:-;;;;;;;;;;-1:-1:-1;1994:240:2;;;;;:::i;:::-;;:::i;1624:196:21:-;;;;;;:::i;:::-;;:::i;1367:105::-;1453:12;;;;;-1:-1:-1;;;;;1453:12:21;;1367:105::o;1941:197::-;1291:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:2;;1272:68;;;;-1:-1:-1;;;1272:68:2;;;;;;;:::i;:::-;;;;;;;;;2012:12:21::1;2001:7;:5;:7::i;:::-;:23;;;;;;-1:-1:-1::0;;;2001:23:21::1;;;;;;;;;;1993:77;;;;-1:-1:-1::0;;;1993:77:21::1;;;;;;;:::i;:::-;2089:12;2080:21:::0;;-1:-1:-1;;2080:21:21::1;::::0;::::1;::::0;;2116:15:::1;::::0;::::1;::::0;-1:-1:-1;;2116:15:21::1;1941:197::o:0;598:201:19:-;681:24;699:5;681:17;:24::i;:::-;673:88;;;;-1:-1:-1;;;673:88:19;;;;;;;:::i;:::-;771:21;786:5;771:14;:21::i;:::-;598:201;:::o;2963:122:21:-;3029:4;3063:15;3052:7;:5;:7::i;:::-;:26;;;;;;-1:-1:-1;;;3052:26:21;;;;;;;;;;;2963:122;-1:-1:-1;;2963:122:21:o;1700:145:2:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:2;;1272:68;;;;-1:-1:-1;;;1272:68:2;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:2;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:2::1;::::0;;1700:145::o;2234:218:21:-;1291:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:2;;1272:68;;;;-1:-1:-1;;;1272:68:2;;;;;;;:::i;:::-;2313:12:21::1;2302:7;:5;:7::i;:::-;:23;;;;;;-1:-1:-1::0;;;2302:23:21::1;;;;;;;;;;2294:86;;;;-1:-1:-1::0;;;2294:86:21::1;;;;;;;:::i;:::-;2390:6;:24:::0;;-1:-1:-1;;2390:24:21::1;2399:15;2390:24;::::0;;2429:16:::1;::::0;::::1;::::0;-1:-1:-1;;2429:16:21::1;2234:218::o:0;1068:85:2:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:2;1068:85;:::o;2521:211:21:-;2596:12;2585:7;:5;:7::i;:::-;:23;;;;;;-1:-1:-1;;;2585:23:21;;;;;;;;;;2577:92;;;;-1:-1:-1;;;2577:92:21;;;;;;;:::i;:::-;2679:46;2703:21;2679:13;:11;:13::i;:::-;-1:-1:-1;;;;;2679:23:21;;;:46::i;:::-;2521:211::o;1216:83::-;1286:6;;;;1216:83;:::o;1025:105:20:-;-1:-1:-1;;;;;1107:16:20;1081:7;1107:16;;;:9;:16;;;;;;;1025:105::o;1994:240:2:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:2;;1272:68;;;;-1:-1:-1;;;1272:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:2;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:2::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:2;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:2::1;-1:-1:-1::0;;;;;2210:17:2;;;::::1;::::0;;;::::1;::::0;;1994:240::o;1624:196:21:-;1720:12;1709:7;:5;:7::i;:::-;:23;;;;;;-1:-1:-1;;;1709:23:21;;;;;;;;;;1701:79;;;;-1:-1:-1;;;1701:79:21;;;;;;;:::i;:::-;1790:23;1804:8;1790:13;:23::i;586:96:40:-;665:10;586:96;:::o;1912:224:20:-;1291:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:2;;1272:68;;;;-1:-1:-1;;;1272:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:16:20;::::1;1988:15;2006:16:::0;;;:9:::1;:16;::::0;;;;;;2033:20;;;2006:16;2064:24:::1;::::0;2006:16;2064:15:::1;:24::i;:::-;2114:5;-1:-1:-1::0;;;;;2104:25:20::1;;2121:7;2104:25;;;;;;:::i;:::-;;;;;;;;1350:1:2;1912:224:20::0;:::o;2048:391:38:-;2162:6;2137:21;:31;;2129:73;;;;-1:-1:-1;;;2129:73:38;;;;;;;:::i;:::-;2291:12;2309:9;-1:-1:-1;;;;;2309:14:38;2332:6;2309:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:54;;;2362:7;2354:78;;;;-1:-1:-1;;;2354:78:38;;;;;;;:::i;:::-;2048:391;;;:::o;1272:202:20:-;1291:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:2;;1272:68;;;;-1:-1:-1;;;1272:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1402:16:20;::::1;1347:14;1402:16:::0;;;:9:::1;:16;::::0;;;;;1364:9:::1;::::0;1402:25:::1;::::0;1364:9;;1402:25:::1;:::i;:::-;-1:-1:-1::0;;;;;1383:16:20;::::1;;::::0;;;:9:::1;:16;::::0;;;;;;:44;;;;1443:24;;::::1;::::0;::::1;::::0;1460:6;;1443:24:::1;:::i;14:259:78:-:0;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:78:o;550:205::-;750:3;741:14::o;760:203::-;-1:-1:-1;;;;;924:32:78;;;;906:51;;894:2;879:18;;861:102::o;1192:187::-;1357:14;;1350:22;1332:41;;1320:2;1305:18;;1287:92::o;1384:338::-;1526:2;1511:18;;1559:1;1548:13;;1538:2;;1604:10;1599:3;1595:20;1592:1;1585:31;1639:4;1636:1;1629:15;1667:4;1664:1;1657:15;1538:2;1691:25;;;1493:229;:::o;1727:420::-;1929:2;1911:21;;;1968:2;1948:18;;;1941:30;2007:34;2002:2;1987:18;;1980:62;2078:26;2073:2;2058:18;;2051:54;2137:3;2122:19;;1901:246::o;2152:402::-;2354:2;2336:21;;;2393:2;2373:18;;;2366:30;2432:34;2427:2;2412:18;;2405:62;-1:-1:-1;;;2498:2:78;2483:18;;2476:36;2544:3;2529:19;;2326:228::o;2559:422::-;2761:2;2743:21;;;2800:2;2780:18;;;2773:30;2839:34;2834:2;2819:18;;2812:62;2910:28;2905:2;2890:18;;2883:56;2971:3;2956:19;;2733:248::o;2986:353::-;3188:2;3170:21;;;3227:2;3207:18;;;3200:30;3266:31;3261:2;3246:18;;3239:59;3330:2;3315:18;;3160:179::o;3344:407::-;3546:2;3528:21;;;3585:2;3565:18;;;3558:30;3624:34;3619:2;3604:18;;3597:62;-1:-1:-1;;;3690:2:78;3675:18;;3668:41;3741:3;3726:19;;3518:233::o;3756:415::-;3958:2;3940:21;;;3997:2;3977:18;;;3970:30;4036:34;4031:2;4016:18;;4009:62;-1:-1:-1;;;4102:2:78;4087:18;;4080:49;4161:3;4146:19;;3930:241::o;4176:405::-;4378:2;4360:21;;;4417:2;4397:18;;;4390:30;4456:34;4451:2;4436:18;;4429:62;-1:-1:-1;;;4522:2:78;4507:18;;4500:39;4571:3;4556:19;;4350:231::o;4586:356::-;4788:2;4770:21;;;4807:18;;;4800:30;4866:34;4861:2;4846:18;;4839:62;4933:2;4918:18;;4760:182::o;4947:414::-;5149:2;5131:21;;;5188:2;5168:18;;;5161:30;5227:34;5222:2;5207:18;;5200:62;-1:-1:-1;;;5293:2:78;5278:18;;5271:48;5351:3;5336:19;;5121:240::o;5366:177::-;5512:25;;;5500:2;5485:18;;5467:76::o;5548:229::-;;5619:1;5615:6;5612:1;5609:13;5606:2;;;-1:-1:-1;;;5645:33:78;;5701:4;5698:1;5691:15;5731:4;5652:3;5719:17;5606:2;-1:-1:-1;5762:9:78;;5596:181::o;5782:133::-;-1:-1:-1;;;;;5859:31:78;;5849:42;;5839:2;;5905:1;5902;5895:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ConditionalEscrow.sol\";\n\n/**\n * @title RefundEscrow\n * @dev Escrow that holds funds for a beneficiary, deposited from multiple\n * parties.\n * @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n * @dev The owner account (that is, the contract that instantiates this\n * contract) may deposit, close the deposit period, and allow for either\n * withdrawal by the beneficiary, or refunds to the depositors. All interactions\n * with `RefundEscrow` will be made through the owner contract.\n */\ncontract RefundEscrow is ConditionalEscrow {\n    using Address for address payable;\n\n    enum State { Active, Refunding, Closed }\n\n    event RefundsClosed();\n    event RefundsEnabled();\n\n    State private _state;\n    address payable private _beneficiary;\n\n    /**\n     * @dev Constructor.\n     * @param beneficiary_ The beneficiary of the deposits.\n     */\n    constructor (address payable beneficiary_) {\n        require(beneficiary_ != address(0), \"RefundEscrow: beneficiary is the zero address\");\n        _beneficiary = beneficiary_;\n        _state = State.Active;\n    }\n\n    /**\n     * @return The current state of the escrow.\n     */\n    function state() public view virtual returns (State) {\n        return _state;\n    }\n\n    /**\n     * @return The beneficiary of the escrow.\n     */\n    function beneficiary() public view virtual returns (address payable) {\n        return _beneficiary;\n    }\n\n    /**\n     * @dev Stores funds that may later be refunded.\n     * @param refundee The address funds will be sent to if a refund occurs.\n     */\n    function deposit(address refundee) public payable virtual override {\n        require(state() == State.Active, \"RefundEscrow: can only deposit while active\");\n        super.deposit(refundee);\n    }\n\n    /**\n     * @dev Allows for the beneficiary to withdraw their funds, rejecting\n     * further deposits.\n     */\n    function close() public virtual onlyOwner {\n        require(state() == State.Active, \"RefundEscrow: can only close while active\");\n        _state = State.Closed;\n        emit RefundsClosed();\n    }\n\n    /**\n     * @dev Allows for refunds to take place, rejecting further deposits.\n     */\n    function enableRefunds() public onlyOwner virtual {\n        require(state() == State.Active, \"RefundEscrow: can only enable refunds while active\");\n        _state = State.Refunding;\n        emit RefundsEnabled();\n    }\n\n    /**\n     * @dev Withdraws the beneficiary's funds.\n     */\n    function beneficiaryWithdraw() public virtual {\n        require(state() == State.Closed, \"RefundEscrow: beneficiary can only withdraw while closed\");\n        beneficiary().sendValue(address(this).balance);\n    }\n\n    /**\n     * @dev Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a\n     * 'payee' argument, but we ignore it here since the condition is global, not per-payee.\n     */\n    function withdrawalAllowed(address) public view override returns (bool) {\n        return state() == State.Refunding;\n    }\n}\n",
  "sourcePath": "C:/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/RefundEscrow.sol",
  "ast": {
    "absolutePath": "/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/RefundEscrow.sol",
    "exportedSymbols": {
      "Address": [
        6028
      ],
      "ConditionalEscrow": [
        2793
      ],
      "Context": [
        6136
      ],
      "Escrow": [
        2893
      ],
      "Ownable": [
        540
      ],
      "RefundEscrow": [
        3072
      ]
    },
    "id": 3073,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2895,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:21"
      },
      {
        "absolutePath": "/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/ConditionalEscrow.sol",
        "file": "./ConditionalEscrow.sol",
        "id": 2896,
        "nodeType": "ImportDirective",
        "scope": 3073,
        "sourceUnit": 2794,
        "src": "58:33:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2898,
              "name": "ConditionalEscrow",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2793,
              "src": "598:17:21"
            },
            "id": 2899,
            "nodeType": "InheritanceSpecifier",
            "src": "598:17:21"
          }
        ],
        "contractDependencies": [
          540,
          2793,
          2893,
          6136
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2897,
          "nodeType": "StructuredDocumentation",
          "src": "93:479:21",
          "text": " @title RefundEscrow\n @dev Escrow that holds funds for a beneficiary, deposited from multiple\n parties.\n @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n @dev The owner account (that is, the contract that instantiates this\n contract) may deposit, close the deposit period, and allow for either\n withdrawal by the beneficiary, or refunds to the depositors. All interactions\n with `RefundEscrow` will be made through the owner contract."
        },
        "fullyImplemented": true,
        "id": 3072,
        "linearizedBaseContracts": [
          3072,
          2793,
          2893,
          540,
          6136
        ],
        "name": "RefundEscrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2902,
            "libraryName": {
              "id": 2900,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6028,
              "src": "628:7:21"
            },
            "nodeType": "UsingForDirective",
            "src": "622:34:21",
            "typeName": {
              "id": 2901,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "640:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "canonicalName": "RefundEscrow.State",
            "id": 2906,
            "members": [
              {
                "id": 2903,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "675:6:21"
              },
              {
                "id": 2904,
                "name": "Refunding",
                "nodeType": "EnumValue",
                "src": "683:9:21"
              },
              {
                "id": 2905,
                "name": "Closed",
                "nodeType": "EnumValue",
                "src": "694:6:21"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "662:40:21"
          },
          {
            "anonymous": false,
            "id": 2908,
            "name": "RefundsClosed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:2:21"
            },
            "src": "708:22:21"
          },
          {
            "anonymous": false,
            "id": 2910,
            "name": "RefundsEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:2:21"
            },
            "src": "735:23:21"
          },
          {
            "constant": false,
            "id": 2913,
            "mutability": "mutable",
            "name": "_state",
            "nodeType": "VariableDeclaration",
            "scope": 3072,
            "src": "764:20:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$2906",
              "typeString": "enum RefundEscrow.State"
            },
            "typeName": {
              "id": 2912,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2911,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2906,
                "src": "764:5:21"
              },
              "referencedDeclaration": 2906,
              "src": "764:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$2906",
                "typeString": "enum RefundEscrow.State"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2915,
            "mutability": "mutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 3072,
            "src": "790:36:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2914,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "790:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2940,
              "nodeType": "Block",
              "src": "977:169:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2922,
                          "name": "beneficiary_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2918,
                          "src": "995:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1019:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1011:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1011:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "995:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2062656e656669636961727920697320746865207a65726f2061646472657373",
                        "id": 2928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1023:47:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
                          "typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
                        },
                        "value": "RefundEscrow: beneficiary is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
                          "typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
                        }
                      ],
                      "id": 2921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "987:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:84:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2930,
                  "nodeType": "ExpressionStatement",
                  "src": "987:84:21"
                },
                {
                  "expression": {
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2931,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "1081:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2932,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "1096:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1081:27:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2934,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:27:21"
                },
                {
                  "expression": {
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2935,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "1118:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2936,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2906,
                        "src": "1127:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 2937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "src": "1127:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "1118:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 2939,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:21:21"
                }
              ]
            },
            "documentation": {
              "id": 2916,
              "nodeType": "StructuredDocumentation",
              "src": "833:96:21",
              "text": " @dev Constructor.\n @param beneficiary_ The beneficiary of the deposits."
            },
            "id": 2941,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2918,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2941,
                  "src": "947:28:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:30:21"
            },
            "returnParameters": {
              "id": 2920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:0:21"
            },
            "scope": 3072,
            "src": "934:212:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2950,
              "nodeType": "Block",
              "src": "1269:30:21",
              "statements": [
                {
                  "expression": {
                    "id": 2948,
                    "name": "_state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2913,
                    "src": "1286:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "functionReturnParameters": 2947,
                  "id": 2949,
                  "nodeType": "Return",
                  "src": "1279:13:21"
                }
              ]
            },
            "documentation": {
              "id": 2942,
              "nodeType": "StructuredDocumentation",
              "src": "1152:59:21",
              "text": " @return The current state of the escrow."
            },
            "functionSelector": "c19d93fb",
            "id": 2951,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "state",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1230:2:21"
            },
            "returnParameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2946,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2951,
                  "src": "1262:5:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$2906",
                    "typeString": "enum RefundEscrow.State"
                  },
                  "typeName": {
                    "id": 2945,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2944,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2906,
                      "src": "1262:5:21"
                    },
                    "referencedDeclaration": 2906,
                    "src": "1262:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:7:21"
            },
            "scope": 3072,
            "src": "1216:83:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2959,
              "nodeType": "Block",
              "src": "1436:36:21",
              "statements": [
                {
                  "expression": {
                    "id": 2957,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2915,
                    "src": "1453:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 2956,
                  "id": 2958,
                  "nodeType": "Return",
                  "src": "1446:19:21"
                }
              ]
            },
            "documentation": {
              "id": 2952,
              "nodeType": "StructuredDocumentation",
              "src": "1305:57:21",
              "text": " @return The beneficiary of the escrow."
            },
            "functionSelector": "38af3eed",
            "id": 2960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1387:2:21"
            },
            "returnParameters": {
              "id": 2956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2955,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "1419:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:17:21"
            },
            "scope": 3072,
            "src": "1367:105:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2860
            ],
            "body": {
              "id": 2982,
              "nodeType": "Block",
              "src": "1691:129:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2906",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 2972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2968,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "1709:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 2969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1709:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2970,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "1720:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 2971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "1720:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "1709:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c79206465706f736974207768696c6520616374697665",
                        "id": 2973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1734:45:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
                          "typeString": "literal_string \"RefundEscrow: can only deposit while active\""
                        },
                        "value": "RefundEscrow: can only deposit while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
                          "typeString": "literal_string \"RefundEscrow: can only deposit while active\""
                        }
                      ],
                      "id": 2967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1701:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1701:79:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2975,
                  "nodeType": "ExpressionStatement",
                  "src": "1701:79:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2979,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2963,
                        "src": "1804:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2976,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1790:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundEscrow_$3072_$",
                          "typeString": "type(contract super RefundEscrow)"
                        }
                      },
                      "id": 2978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2860,
                      "src": "1790:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1790:23:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2981,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:23:21"
                }
              ]
            },
            "documentation": {
              "id": 2961,
              "nodeType": "StructuredDocumentation",
              "src": "1478:141:21",
              "text": " @dev Stores funds that may later be refunded.\n @param refundee The address funds will be sent to if a refund occurs."
            },
            "functionSelector": "f340fa01",
            "id": 2983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1682:8:21"
            },
            "parameters": {
              "id": 2964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2963,
                  "mutability": "mutable",
                  "name": "refundee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2983,
                  "src": "1641:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1640:18:21"
            },
            "returnParameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1691:0:21"
            },
            "scope": 3072,
            "src": "1624:196:21",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3006,
              "nodeType": "Block",
              "src": "1983:155:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2906",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 2994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2990,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "2001:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 2991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2001:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2992,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "2012:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 2993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "2012:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2001:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696c6520616374697665",
                        "id": 2995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:43:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
                          "typeString": "literal_string \"RefundEscrow: can only close while active\""
                        },
                        "value": "RefundEscrow: can only close while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
                          "typeString": "literal_string \"RefundEscrow: can only close while active\""
                        }
                      ],
                      "id": 2989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1993:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:77:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2997,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:77:21"
                },
                {
                  "expression": {
                    "id": 3001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2998,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "2080:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2999,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2906,
                        "src": "2089:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 3000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Closed",
                      "nodeType": "MemberAccess",
                      "src": "2089:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "2080:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 3002,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:21:21"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3003,
                      "name": "RefundsClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2908,
                      "src": "2116:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:15:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3005,
                  "nodeType": "EmitStatement",
                  "src": "2111:20:21"
                }
              ]
            },
            "documentation": {
              "id": 2984,
              "nodeType": "StructuredDocumentation",
              "src": "1826:110:21",
              "text": " @dev Allows for the beneficiary to withdraw their funds, rejecting\n further deposits."
            },
            "functionSelector": "43d726d6",
            "id": 3007,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2987,
                "modifierName": {
                  "id": 2986,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 489,
                  "src": "1973:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1973:9:21"
              }
            ],
            "name": "close",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1955:2:21"
            },
            "returnParameters": {
              "id": 2988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:0:21"
            },
            "scope": 3072,
            "src": "1941:197:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3030,
              "nodeType": "Block",
              "src": "2284:168:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2906",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 3018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3014,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "2302:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 3015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3016,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "2313:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 3017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "2313:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2302:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726566756e6473207768696c6520616374697665",
                        "id": 3019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2327:52:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
                          "typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
                        },
                        "value": "RefundEscrow: can only enable refunds while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
                          "typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
                        }
                      ],
                      "id": 3013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2294:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2294:86:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3021,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:86:21"
                },
                {
                  "expression": {
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3022,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "2390:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3023,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2906,
                        "src": "2399:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 3024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "src": "2399:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "2390:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:24:21"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3027,
                      "name": "RefundsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2910,
                      "src": "2429:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2429:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3029,
                  "nodeType": "EmitStatement",
                  "src": "2424:21:21"
                }
              ]
            },
            "documentation": {
              "id": 3008,
              "nodeType": "StructuredDocumentation",
              "src": "2144:85:21",
              "text": " @dev Allows for refunds to take place, rejecting further deposits."
            },
            "functionSelector": "8c52dc41",
            "id": 3031,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3011,
                "modifierName": {
                  "id": 3010,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 489,
                  "src": "2266:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2266:9:21"
              }
            ],
            "name": "enableRefunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2256:2:21"
            },
            "returnParameters": {
              "id": 3012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2284:0:21"
            },
            "scope": 3072,
            "src": "2234:218:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3054,
              "nodeType": "Block",
              "src": "2567:165:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2906",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 3040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3036,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "2585:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 3037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2585:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3038,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "2596:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 3039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Closed",
                          "nodeType": "MemberAccess",
                          "src": "2596:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2585:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2062656e65666963696172792063616e206f6e6c79207769746864726177207768696c6520636c6f736564",
                        "id": 3041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:58:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
                          "typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
                        },
                        "value": "RefundEscrow: beneficiary can only withdraw while closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
                          "typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
                        }
                      ],
                      "id": 3035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2577:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2577:92:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3043,
                  "nodeType": "ExpressionStatement",
                  "src": "2577:92:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3049,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2711:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$3072",
                                "typeString": "contract RefundEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RefundEscrow_$3072",
                                "typeString": "contract RefundEscrow"
                              }
                            ],
                            "id": 3048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2703:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3047,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2703:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2703:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2703:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3044,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2960,
                          "src": "2679:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2679:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5786,
                      "src": "2679:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2679:46:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:46:21"
                }
              ]
            },
            "documentation": {
              "id": 3032,
              "nodeType": "StructuredDocumentation",
              "src": "2458:58:21",
              "text": " @dev Withdraws the beneficiary's funds."
            },
            "functionSelector": "9af6549a",
            "id": 3055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiaryWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:2:21"
            },
            "returnParameters": {
              "id": 3034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2567:0:21"
            },
            "scope": 3072,
            "src": "2521:211:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2772
            ],
            "body": {
              "id": 3070,
              "nodeType": "Block",
              "src": "3035:50:21",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    },
                    "id": 3068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3064,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2951,
                        "src": "3052:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                          "typeString": "function () view returns (enum RefundEscrow.State)"
                        }
                      },
                      "id": 3065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3052:7:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3066,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2906,
                        "src": "3063:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 3067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "src": "3063:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "3052:26:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3063,
                  "id": 3069,
                  "nodeType": "Return",
                  "src": "3045:33:21"
                }
              ]
            },
            "documentation": {
              "id": 3056,
              "nodeType": "StructuredDocumentation",
              "src": "2738:220:21",
              "text": " @dev Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a\n 'payee' argument, but we ignore it here since the condition is global, not per-payee."
            },
            "functionSelector": "685ca194",
            "id": 3071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3060,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3011:8:21"
            },
            "parameters": {
              "id": 3059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3058,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3071,
                  "src": "2990:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2990:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2989:9:21"
            },
            "returnParameters": {
              "id": 3063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3062,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3071,
                  "src": "3029:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3061,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3029:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3028:6:21"
            },
            "scope": 3072,
            "src": "2963:122:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3073,
        "src": "573:2514:21"
      }
    ],
    "src": "33:3055:21"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/RefundEscrow.sol",
    "exportedSymbols": {
      "Address": [
        6028
      ],
      "ConditionalEscrow": [
        2793
      ],
      "Context": [
        6136
      ],
      "Escrow": [
        2893
      ],
      "Ownable": [
        540
      ],
      "RefundEscrow": [
        3072
      ]
    },
    "id": 3073,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2895,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:21"
      },
      {
        "absolutePath": "/C/Users/User/Documents/DEV/PRUF/PRUF_TRUFFLE/contracts/Imports/payment/escrow/ConditionalEscrow.sol",
        "file": "./ConditionalEscrow.sol",
        "id": 2896,
        "nodeType": "ImportDirective",
        "scope": 3073,
        "sourceUnit": 2794,
        "src": "58:33:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2898,
              "name": "ConditionalEscrow",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2793,
              "src": "598:17:21"
            },
            "id": 2899,
            "nodeType": "InheritanceSpecifier",
            "src": "598:17:21"
          }
        ],
        "contractDependencies": [
          540,
          2793,
          2893,
          6136
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2897,
          "nodeType": "StructuredDocumentation",
          "src": "93:479:21",
          "text": " @title RefundEscrow\n @dev Escrow that holds funds for a beneficiary, deposited from multiple\n parties.\n @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n @dev The owner account (that is, the contract that instantiates this\n contract) may deposit, close the deposit period, and allow for either\n withdrawal by the beneficiary, or refunds to the depositors. All interactions\n with `RefundEscrow` will be made through the owner contract."
        },
        "fullyImplemented": true,
        "id": 3072,
        "linearizedBaseContracts": [
          3072,
          2793,
          2893,
          540,
          6136
        ],
        "name": "RefundEscrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2902,
            "libraryName": {
              "id": 2900,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6028,
              "src": "628:7:21"
            },
            "nodeType": "UsingForDirective",
            "src": "622:34:21",
            "typeName": {
              "id": 2901,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "640:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "canonicalName": "RefundEscrow.State",
            "id": 2906,
            "members": [
              {
                "id": 2903,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "675:6:21"
              },
              {
                "id": 2904,
                "name": "Refunding",
                "nodeType": "EnumValue",
                "src": "683:9:21"
              },
              {
                "id": 2905,
                "name": "Closed",
                "nodeType": "EnumValue",
                "src": "694:6:21"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "662:40:21"
          },
          {
            "anonymous": false,
            "id": 2908,
            "name": "RefundsClosed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:2:21"
            },
            "src": "708:22:21"
          },
          {
            "anonymous": false,
            "id": 2910,
            "name": "RefundsEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:2:21"
            },
            "src": "735:23:21"
          },
          {
            "constant": false,
            "id": 2913,
            "mutability": "mutable",
            "name": "_state",
            "nodeType": "VariableDeclaration",
            "scope": 3072,
            "src": "764:20:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$2906",
              "typeString": "enum RefundEscrow.State"
            },
            "typeName": {
              "id": 2912,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2911,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2906,
                "src": "764:5:21"
              },
              "referencedDeclaration": 2906,
              "src": "764:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$2906",
                "typeString": "enum RefundEscrow.State"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2915,
            "mutability": "mutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 3072,
            "src": "790:36:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2914,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "790:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2940,
              "nodeType": "Block",
              "src": "977:169:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2922,
                          "name": "beneficiary_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2918,
                          "src": "995:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1019:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1011:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1011:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "995:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2062656e656669636961727920697320746865207a65726f2061646472657373",
                        "id": 2928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1023:47:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
                          "typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
                        },
                        "value": "RefundEscrow: beneficiary is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
                          "typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
                        }
                      ],
                      "id": 2921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "987:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:84:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2930,
                  "nodeType": "ExpressionStatement",
                  "src": "987:84:21"
                },
                {
                  "expression": {
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2931,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "1081:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2932,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "1096:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1081:27:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2934,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:27:21"
                },
                {
                  "expression": {
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2935,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "1118:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2936,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2906,
                        "src": "1127:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 2937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "src": "1127:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "1118:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 2939,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:21:21"
                }
              ]
            },
            "documentation": {
              "id": 2916,
              "nodeType": "StructuredDocumentation",
              "src": "833:96:21",
              "text": " @dev Constructor.\n @param beneficiary_ The beneficiary of the deposits."
            },
            "id": 2941,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2918,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2941,
                  "src": "947:28:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:30:21"
            },
            "returnParameters": {
              "id": 2920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:0:21"
            },
            "scope": 3072,
            "src": "934:212:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2950,
              "nodeType": "Block",
              "src": "1269:30:21",
              "statements": [
                {
                  "expression": {
                    "id": 2948,
                    "name": "_state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2913,
                    "src": "1286:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "functionReturnParameters": 2947,
                  "id": 2949,
                  "nodeType": "Return",
                  "src": "1279:13:21"
                }
              ]
            },
            "documentation": {
              "id": 2942,
              "nodeType": "StructuredDocumentation",
              "src": "1152:59:21",
              "text": " @return The current state of the escrow."
            },
            "functionSelector": "c19d93fb",
            "id": 2951,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "state",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1230:2:21"
            },
            "returnParameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2946,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2951,
                  "src": "1262:5:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$2906",
                    "typeString": "enum RefundEscrow.State"
                  },
                  "typeName": {
                    "id": 2945,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2944,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2906,
                      "src": "1262:5:21"
                    },
                    "referencedDeclaration": 2906,
                    "src": "1262:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:7:21"
            },
            "scope": 3072,
            "src": "1216:83:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2959,
              "nodeType": "Block",
              "src": "1436:36:21",
              "statements": [
                {
                  "expression": {
                    "id": 2957,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2915,
                    "src": "1453:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 2956,
                  "id": 2958,
                  "nodeType": "Return",
                  "src": "1446:19:21"
                }
              ]
            },
            "documentation": {
              "id": 2952,
              "nodeType": "StructuredDocumentation",
              "src": "1305:57:21",
              "text": " @return The beneficiary of the escrow."
            },
            "functionSelector": "38af3eed",
            "id": 2960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1387:2:21"
            },
            "returnParameters": {
              "id": 2956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2955,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "1419:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:17:21"
            },
            "scope": 3072,
            "src": "1367:105:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2860
            ],
            "body": {
              "id": 2982,
              "nodeType": "Block",
              "src": "1691:129:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2906",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 2972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2968,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "1709:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 2969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1709:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2970,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "1720:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 2971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "1720:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "1709:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c79206465706f736974207768696c6520616374697665",
                        "id": 2973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1734:45:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
                          "typeString": "literal_string \"RefundEscrow: can only deposit while active\""
                        },
                        "value": "RefundEscrow: can only deposit while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
                          "typeString": "literal_string \"RefundEscrow: can only deposit while active\""
                        }
                      ],
                      "id": 2967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1701:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1701:79:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2975,
                  "nodeType": "ExpressionStatement",
                  "src": "1701:79:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2979,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2963,
                        "src": "1804:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2976,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1790:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundEscrow_$3072_$",
                          "typeString": "type(contract super RefundEscrow)"
                        }
                      },
                      "id": 2978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2860,
                      "src": "1790:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1790:23:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2981,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:23:21"
                }
              ]
            },
            "documentation": {
              "id": 2961,
              "nodeType": "StructuredDocumentation",
              "src": "1478:141:21",
              "text": " @dev Stores funds that may later be refunded.\n @param refundee The address funds will be sent to if a refund occurs."
            },
            "functionSelector": "f340fa01",
            "id": 2983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1682:8:21"
            },
            "parameters": {
              "id": 2964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2963,
                  "mutability": "mutable",
                  "name": "refundee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2983,
                  "src": "1641:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1640:18:21"
            },
            "returnParameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1691:0:21"
            },
            "scope": 3072,
            "src": "1624:196:21",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3006,
              "nodeType": "Block",
              "src": "1983:155:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2906",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 2994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2990,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "2001:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 2991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2001:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2992,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "2012:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 2993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "2012:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2001:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696c6520616374697665",
                        "id": 2995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:43:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
                          "typeString": "literal_string \"RefundEscrow: can only close while active\""
                        },
                        "value": "RefundEscrow: can only close while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
                          "typeString": "literal_string \"RefundEscrow: can only close while active\""
                        }
                      ],
                      "id": 2989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1993:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:77:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2997,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:77:21"
                },
                {
                  "expression": {
                    "id": 3001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2998,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "2080:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2999,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2906,
                        "src": "2089:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 3000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Closed",
                      "nodeType": "MemberAccess",
                      "src": "2089:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "2080:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 3002,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:21:21"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3003,
                      "name": "RefundsClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2908,
                      "src": "2116:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:15:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3005,
                  "nodeType": "EmitStatement",
                  "src": "2111:20:21"
                }
              ]
            },
            "documentation": {
              "id": 2984,
              "nodeType": "StructuredDocumentation",
              "src": "1826:110:21",
              "text": " @dev Allows for the beneficiary to withdraw their funds, rejecting\n further deposits."
            },
            "functionSelector": "43d726d6",
            "id": 3007,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2987,
                "modifierName": {
                  "id": 2986,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 489,
                  "src": "1973:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1973:9:21"
              }
            ],
            "name": "close",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1955:2:21"
            },
            "returnParameters": {
              "id": 2988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:0:21"
            },
            "scope": 3072,
            "src": "1941:197:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3030,
              "nodeType": "Block",
              "src": "2284:168:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2906",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 3018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3014,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "2302:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 3015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3016,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "2313:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 3017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "2313:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2302:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726566756e6473207768696c6520616374697665",
                        "id": 3019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2327:52:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
                          "typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
                        },
                        "value": "RefundEscrow: can only enable refunds while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
                          "typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
                        }
                      ],
                      "id": 3013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2294:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2294:86:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3021,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:86:21"
                },
                {
                  "expression": {
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3022,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "2390:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3023,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2906,
                        "src": "2399:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 3024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "src": "2399:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "2390:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:24:21"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3027,
                      "name": "RefundsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2910,
                      "src": "2429:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2429:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3029,
                  "nodeType": "EmitStatement",
                  "src": "2424:21:21"
                }
              ]
            },
            "documentation": {
              "id": 3008,
              "nodeType": "StructuredDocumentation",
              "src": "2144:85:21",
              "text": " @dev Allows for refunds to take place, rejecting further deposits."
            },
            "functionSelector": "8c52dc41",
            "id": 3031,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3011,
                "modifierName": {
                  "id": 3010,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 489,
                  "src": "2266:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2266:9:21"
              }
            ],
            "name": "enableRefunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2256:2:21"
            },
            "returnParameters": {
              "id": 3012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2284:0:21"
            },
            "scope": 3072,
            "src": "2234:218:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3054,
              "nodeType": "Block",
              "src": "2567:165:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$2906",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 3040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3036,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2951,
                            "src": "2585:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 3037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2585:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3038,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "2596:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 3039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Closed",
                          "nodeType": "MemberAccess",
                          "src": "2596:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$2906",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2585:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2062656e65666963696172792063616e206f6e6c79207769746864726177207768696c6520636c6f736564",
                        "id": 3041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:58:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
                          "typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
                        },
                        "value": "RefundEscrow: beneficiary can only withdraw while closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
                          "typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
                        }
                      ],
                      "id": 3035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2577:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2577:92:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3043,
                  "nodeType": "ExpressionStatement",
                  "src": "2577:92:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3049,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2711:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$3072",
                                "typeString": "contract RefundEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RefundEscrow_$3072",
                                "typeString": "contract RefundEscrow"
                              }
                            ],
                            "id": 3048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2703:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3047,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2703:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2703:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2703:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3044,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2960,
                          "src": "2679:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2679:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5786,
                      "src": "2679:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2679:46:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:46:21"
                }
              ]
            },
            "documentation": {
              "id": 3032,
              "nodeType": "StructuredDocumentation",
              "src": "2458:58:21",
              "text": " @dev Withdraws the beneficiary's funds."
            },
            "functionSelector": "9af6549a",
            "id": 3055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiaryWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:2:21"
            },
            "returnParameters": {
              "id": 3034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2567:0:21"
            },
            "scope": 3072,
            "src": "2521:211:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2772
            ],
            "body": {
              "id": 3070,
              "nodeType": "Block",
              "src": "3035:50:21",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$2906",
                      "typeString": "enum RefundEscrow.State"
                    },
                    "id": 3068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3064,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2951,
                        "src": "3052:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$2906_$",
                          "typeString": "function () view returns (enum RefundEscrow.State)"
                        }
                      },
                      "id": 3065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3052:7:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3066,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2906,
                        "src": "3063:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$2906_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 3067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "src": "3063:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$2906",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "3052:26:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3063,
                  "id": 3069,
                  "nodeType": "Return",
                  "src": "3045:33:21"
                }
              ]
            },
            "documentation": {
              "id": 3056,
              "nodeType": "StructuredDocumentation",
              "src": "2738:220:21",
              "text": " @dev Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a\n 'payee' argument, but we ignore it here since the condition is global, not per-payee."
            },
            "functionSelector": "685ca194",
            "id": 3071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3060,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3011:8:21"
            },
            "parameters": {
              "id": 3059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3058,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3071,
                  "src": "2990:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2990:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2989:9:21"
            },
            "returnParameters": {
              "id": 3063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3062,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3071,
                  "src": "3029:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3061,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3029:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3028:6:21"
            },
            "scope": 3072,
            "src": "2963:122:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3073,
        "src": "573:2514:21"
      }
    ],
    "src": "33:3055:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-18T22:17:42.878Z",
  "devdoc": {
    "details": "Escrow that holds funds for a beneficiary, deposited from multiple parties.Intended usage: See {Escrow}. Same usage guidelines apply here.The owner account (that is, the contract that instantiates this contract) may deposit, close the deposit period, and allow for either withdrawal by the beneficiary, or refunds to the depositors. All interactions with `RefundEscrow` will be made through the owner contract.",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "The beneficiary of the escrow."
        }
      },
      "beneficiaryWithdraw()": {
        "details": "Withdraws the beneficiary's funds."
      },
      "close()": {
        "details": "Allows for the beneficiary to withdraw their funds, rejecting further deposits."
      },
      "constructor": {
        "details": "Constructor.",
        "params": {
          "beneficiary_": "The beneficiary of the deposits."
        }
      },
      "deposit(address)": {
        "details": "Stores funds that may later be refunded.",
        "params": {
          "refundee": "The address funds will be sent to if a refund occurs."
        }
      },
      "enableRefunds()": {
        "details": "Allows for refunds to take place, rejecting further deposits."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "state()": {
        "returns": {
          "_0": "The current state of the escrow."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address)": {
        "details": "Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "The address whose funds will be withdrawn and transferred to."
        }
      },
      "withdrawalAllowed(address)": {
        "details": "Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a 'payee' argument, but we ignore it here since the condition is global, not per-payee."
      }
    },
    "title": "RefundEscrow",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}